return {

Transform = { 
	type = "class",
	description = "UnityEngine",
},
get_position = {
	type = "function", 
	description = " Class:Transform.get_position Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_position = {
	type = "function", 
	description = " Class:Transform.set_position Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_localPosition = {
	type = "function", 
	description = " Class:Transform.get_localPosition Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_localPosition = {
	type = "function", 
	description = " Class:Transform.set_localPosition Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_eulerAngles = {
	type = "function", 
	description = " Class:Transform.get_eulerAngles Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_eulerAngles = {
	type = "function", 
	description = " Class:Transform.set_eulerAngles Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_localEulerAngles = {
	type = "function", 
	description = " Class:Transform.get_localEulerAngles Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_localEulerAngles = {
	type = "function", 
	description = " Class:Transform.set_localEulerAngles Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_right = {
	type = "function", 
	description = " Class:Transform.get_right Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_right = {
	type = "function", 
	description = " Class:Transform.set_right Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_up = {
	type = "function", 
	description = " Class:Transform.get_up Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_up = {
	type = "function", 
	description = " Class:Transform.set_up Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_forward = {
	type = "function", 
	description = " Class:Transform.get_forward Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_forward = {
	type = "function", 
	description = " Class:Transform.set_forward Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_rotation = {
	type = "function", 
	description = " Class:Transform.get_rotation Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Quaternion",
 },
set_rotation = {
	type = "function", 
	description = " Class:Transform.set_rotation Static:False Public:True",
	args =  "( Quaternion value )", 
	returns = "System.Void",
 },
get_localRotation = {
	type = "function", 
	description = " Class:Transform.get_localRotation Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Quaternion",
 },
set_localRotation = {
	type = "function", 
	description = " Class:Transform.set_localRotation Static:False Public:True",
	args =  "( Quaternion value )", 
	returns = "System.Void",
 },
get_localScale = {
	type = "function", 
	description = " Class:Transform.get_localScale Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_localScale = {
	type = "function", 
	description = " Class:Transform.set_localScale Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_parent = {
	type = "function", 
	description = " Class:Transform.get_parent Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Transform",
 },
set_parent = {
	type = "function", 
	description = " Class:Transform.set_parent Static:False Public:True",
	args =  "( Transform value )", 
	returns = "System.Void",
 },
SetParent = {
	type = "function", 
	description = " Class:Transform.SetParent Static:False Public:True",
	args =  "( Transform parent )", 
	returns = "System.Void",
 },
SetParent = {
	type = "function", 
	description = " Class:Transform.SetParent Static:False Public:True",
	args =  "( Transform parent, Boolean worldPositionStays )", 
	returns = "System.Void",
 },
get_worldToLocalMatrix = {
	type = "function", 
	description = " Class:Transform.get_worldToLocalMatrix Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Matrix4x4",
 },
get_localToWorldMatrix = {
	type = "function", 
	description = " Class:Transform.get_localToWorldMatrix Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Matrix4x4",
 },
Translate = {
	type = "function", 
	description = " Class:Transform.Translate Static:False Public:True",
	args =  "( Vector3 translation )", 
	returns = "System.Void",
 },
Translate = {
	type = "function", 
	description = " Class:Transform.Translate Static:False Public:True",
	args =  "( Vector3 translation, Space relativeTo )", 
	returns = "System.Void",
 },
Translate = {
	type = "function", 
	description = " Class:Transform.Translate Static:False Public:True",
	args =  "( Single x, Single y, Single z )", 
	returns = "System.Void",
 },
Translate = {
	type = "function", 
	description = " Class:Transform.Translate Static:False Public:True",
	args =  "( Single x, Single y, Single z, Space relativeTo )", 
	returns = "System.Void",
 },
Translate = {
	type = "function", 
	description = " Class:Transform.Translate Static:False Public:True",
	args =  "( Vector3 translation, Transform relativeTo )", 
	returns = "System.Void",
 },
Translate = {
	type = "function", 
	description = " Class:Transform.Translate Static:False Public:True",
	args =  "( Single x, Single y, Single z, Transform relativeTo )", 
	returns = "System.Void",
 },
Rotate = {
	type = "function", 
	description = " Class:Transform.Rotate Static:False Public:True",
	args =  "( Vector3 eulerAngles )", 
	returns = "System.Void",
 },
Rotate = {
	type = "function", 
	description = " Class:Transform.Rotate Static:False Public:True",
	args =  "( Vector3 eulerAngles, Space relativeTo )", 
	returns = "System.Void",
 },
Rotate = {
	type = "function", 
	description = " Class:Transform.Rotate Static:False Public:True",
	args =  "( Single xAngle, Single yAngle, Single zAngle )", 
	returns = "System.Void",
 },
Rotate = {
	type = "function", 
	description = " Class:Transform.Rotate Static:False Public:True",
	args =  "( Single xAngle, Single yAngle, Single zAngle, Space relativeTo )", 
	returns = "System.Void",
 },
Rotate = {
	type = "function", 
	description = " Class:Transform.Rotate Static:False Public:True",
	args =  "( Vector3 axis, Single angle )", 
	returns = "System.Void",
 },
Rotate = {
	type = "function", 
	description = " Class:Transform.Rotate Static:False Public:True",
	args =  "( Vector3 axis, Single angle, Space relativeTo )", 
	returns = "System.Void",
 },
RotateAround = {
	type = "function", 
	description = " Class:Transform.RotateAround Static:False Public:True",
	args =  "( Vector3 point, Vector3 axis, Single angle )", 
	returns = "System.Void",
 },
LookAt = {
	type = "function", 
	description = " Class:Transform.LookAt Static:False Public:True",
	args =  "( Transform target )", 
	returns = "System.Void",
 },
LookAt = {
	type = "function", 
	description = " Class:Transform.LookAt Static:False Public:True",
	args =  "( Transform target, Vector3 worldUp )", 
	returns = "System.Void",
 },
LookAt = {
	type = "function", 
	description = " Class:Transform.LookAt Static:False Public:True",
	args =  "( Vector3 worldPosition, Vector3 worldUp )", 
	returns = "System.Void",
 },
LookAt = {
	type = "function", 
	description = " Class:Transform.LookAt Static:False Public:True",
	args =  "( Vector3 worldPosition )", 
	returns = "System.Void",
 },
TransformDirection = {
	type = "function", 
	description = " Class:Transform.TransformDirection Static:False Public:True",
	args =  "( Vector3 direction )", 
	returns = "UnityEngine.Vector3",
 },
TransformDirection = {
	type = "function", 
	description = " Class:Transform.TransformDirection Static:False Public:True",
	args =  "( Single x, Single y, Single z )", 
	returns = "UnityEngine.Vector3",
 },
InverseTransformDirection = {
	type = "function", 
	description = " Class:Transform.InverseTransformDirection Static:False Public:True",
	args =  "( Vector3 direction )", 
	returns = "UnityEngine.Vector3",
 },
InverseTransformDirection = {
	type = "function", 
	description = " Class:Transform.InverseTransformDirection Static:False Public:True",
	args =  "( Single x, Single y, Single z )", 
	returns = "UnityEngine.Vector3",
 },
TransformVector = {
	type = "function", 
	description = " Class:Transform.TransformVector Static:False Public:True",
	args =  "( Vector3 vector )", 
	returns = "UnityEngine.Vector3",
 },
TransformVector = {
	type = "function", 
	description = " Class:Transform.TransformVector Static:False Public:True",
	args =  "( Single x, Single y, Single z )", 
	returns = "UnityEngine.Vector3",
 },
InverseTransformVector = {
	type = "function", 
	description = " Class:Transform.InverseTransformVector Static:False Public:True",
	args =  "( Vector3 vector )", 
	returns = "UnityEngine.Vector3",
 },
InverseTransformVector = {
	type = "function", 
	description = " Class:Transform.InverseTransformVector Static:False Public:True",
	args =  "( Single x, Single y, Single z )", 
	returns = "UnityEngine.Vector3",
 },
TransformPoint = {
	type = "function", 
	description = " Class:Transform.TransformPoint Static:False Public:True",
	args =  "( Vector3 position )", 
	returns = "UnityEngine.Vector3",
 },
TransformPoint = {
	type = "function", 
	description = " Class:Transform.TransformPoint Static:False Public:True",
	args =  "( Single x, Single y, Single z )", 
	returns = "UnityEngine.Vector3",
 },
InverseTransformPoint = {
	type = "function", 
	description = " Class:Transform.InverseTransformPoint Static:False Public:True",
	args =  "( Vector3 position )", 
	returns = "UnityEngine.Vector3",
 },
InverseTransformPoint = {
	type = "function", 
	description = " Class:Transform.InverseTransformPoint Static:False Public:True",
	args =  "( Single x, Single y, Single z )", 
	returns = "UnityEngine.Vector3",
 },
get_root = {
	type = "function", 
	description = " Class:Transform.get_root Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Transform",
 },
get_childCount = {
	type = "function", 
	description = " Class:Transform.get_childCount Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
DetachChildren = {
	type = "function", 
	description = " Class:Transform.DetachChildren Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
SetAsFirstSibling = {
	type = "function", 
	description = " Class:Transform.SetAsFirstSibling Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
SetAsLastSibling = {
	type = "function", 
	description = " Class:Transform.SetAsLastSibling Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
SetSiblingIndex = {
	type = "function", 
	description = " Class:Transform.SetSiblingIndex Static:False Public:True",
	args =  "( Int32 index )", 
	returns = "System.Void",
 },
GetSiblingIndex = {
	type = "function", 
	description = " Class:Transform.GetSiblingIndex Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
Find = {
	type = "function", 
	description = " Class:Transform.Find Static:False Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Transform",
 },
get_lossyScale = {
	type = "function", 
	description = " Class:Transform.get_lossyScale Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
IsChildOf = {
	type = "function", 
	description = " Class:Transform.IsChildOf Static:False Public:True",
	args =  "( Transform parent )", 
	returns = "System.Boolean",
 },
get_hasChanged = {
	type = "function", 
	description = " Class:Transform.get_hasChanged Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_hasChanged = {
	type = "function", 
	description = " Class:Transform.set_hasChanged Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
FindChild = {
	type = "function", 
	description = " Class:Transform.FindChild Static:False Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Transform",
 },
GetEnumerator = {
	type = "function", 
	description = " Class:Transform.GetEnumerator Static:False Public:True",
	args =  "()", 
	returns = "System.Collections.IEnumerator",
 },
RotateAround = {
	type = "function", 
	description = " Class:Transform.RotateAround Static:False Public:True",
	args =  "( Vector3 axis, Single angle )", 
	returns = "System.Void",
 },
RotateAroundLocal = {
	type = "function", 
	description = " Class:Transform.RotateAroundLocal Static:False Public:True",
	args =  "( Vector3 axis, Single angle )", 
	returns = "System.Void",
 },
GetChild = {
	type = "function", 
	description = " Class:Transform.GetChild Static:False Public:True",
	args =  "( Int32 index )", 
	returns = "UnityEngine.Transform",
 },
GetChildCount = {
	type = "function", 
	description = " Class:Transform.GetChildCount Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_hierarchyCapacity = {
	type = "function", 
	description = " Class:Transform.get_hierarchyCapacity Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_hierarchyCapacity = {
	type = "function", 
	description = " Class:Transform.set_hierarchyCapacity Static:False Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_hierarchyCount = {
	type = "function", 
	description = " Class:Transform.get_hierarchyCount Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_transform = {
	type = "function", 
	description = " Class:Transform.get_transform Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Transform",
 },
get_gameObject = {
	type = "function", 
	description = " Class:Transform.get_gameObject Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.GameObject",
 },
GetComponent = {
	type = "function", 
	description = " Class:Transform.GetComponent Static:False Public:True",
	args =  "( System.Type type )", 
	returns = "UnityEngine.Component",
 },
GetComponent = {
	type = "function", 
	description = " Class:Transform.GetComponent Static:False Public:True",
	args =  "()", 
	returns = "T",
 },
GetComponent = {
	type = "function", 
	description = " Class:Transform.GetComponent Static:False Public:True",
	args =  "( System.String type )", 
	returns = "UnityEngine.Component",
 },
GetComponentInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentInChildren Static:False Public:True",
	args =  "( System.Type t, Boolean includeInactive )", 
	returns = "UnityEngine.Component",
 },
GetComponentInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentInChildren Static:False Public:True",
	args =  "( System.Type t )", 
	returns = "UnityEngine.Component",
 },
GetComponentInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentInChildren Static:False Public:True",
	args =  "()", 
	returns = "T",
 },
GetComponentInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentInChildren Static:False Public:True",
	args =  "( Boolean includeInactive )", 
	returns = "T",
 },
GetComponentsInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentsInChildren Static:False Public:True",
	args =  "( System.Type t )", 
	returns = "UnityEngine.Component[]",
 },
GetComponentsInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentsInChildren Static:False Public:True",
	args =  "( System.Type t, Boolean includeInactive )", 
	returns = "UnityEngine.Component[]",
 },
GetComponentsInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentsInChildren Static:False Public:True",
	args =  "( Boolean includeInactive )", 
	returns = "T[]",
 },
GetComponentsInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentsInChildren Static:False Public:True",
	args =  "( Boolean includeInactive, System.Collections.Generic.List`1[[T]] result )", 
	returns = "System.Void",
 },
GetComponentsInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentsInChildren Static:False Public:True",
	args =  "()", 
	returns = "T[]",
 },
GetComponentsInChildren = {
	type = "function", 
	description = " Class:Transform.GetComponentsInChildren Static:False Public:True",
	args =  "( System.Collections.Generic.List`1[[T]] results )", 
	returns = "System.Void",
 },
GetComponentInParent = {
	type = "function", 
	description = " Class:Transform.GetComponentInParent Static:False Public:True",
	args =  "( System.Type t )", 
	returns = "UnityEngine.Component",
 },
GetComponentInParent = {
	type = "function", 
	description = " Class:Transform.GetComponentInParent Static:False Public:True",
	args =  "()", 
	returns = "T",
 },
GetComponentsInParent = {
	type = "function", 
	description = " Class:Transform.GetComponentsInParent Static:False Public:True",
	args =  "( System.Type t )", 
	returns = "UnityEngine.Component[]",
 },
GetComponentsInParent = {
	type = "function", 
	description = " Class:Transform.GetComponentsInParent Static:False Public:True",
	args =  "( System.Type t, Boolean includeInactive )", 
	returns = "UnityEngine.Component[]",
 },
GetComponentsInParent = {
	type = "function", 
	description = " Class:Transform.GetComponentsInParent Static:False Public:True",
	args =  "( Boolean includeInactive )", 
	returns = "T[]",
 },
GetComponentsInParent = {
	type = "function", 
	description = " Class:Transform.GetComponentsInParent Static:False Public:True",
	args =  "( Boolean includeInactive, System.Collections.Generic.List`1[[T]] results )", 
	returns = "System.Void",
 },
GetComponentsInParent = {
	type = "function", 
	description = " Class:Transform.GetComponentsInParent Static:False Public:True",
	args =  "()", 
	returns = "T[]",
 },
GetComponents = {
	type = "function", 
	description = " Class:Transform.GetComponents Static:False Public:True",
	args =  "( System.Type type )", 
	returns = "UnityEngine.Component[]",
 },
GetComponents = {
	type = "function", 
	description = " Class:Transform.GetComponents Static:False Public:True",
	args =  "( System.Type type, System.Collections.Generic.List`1[[UnityEngine.Component, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] results )", 
	returns = "System.Void",
 },
GetComponents = {
	type = "function", 
	description = " Class:Transform.GetComponents Static:False Public:True",
	args =  "( System.Collections.Generic.List`1[[T]] results )", 
	returns = "System.Void",
 },
get_tag = {
	type = "function", 
	description = " Class:Transform.get_tag Static:False Public:True",
	args =  "()", 
	returns = "System.String",
 },
set_tag = {
	type = "function", 
	description = " Class:Transform.set_tag Static:False Public:True",
	args =  "( System.String value )", 
	returns = "System.Void",
 },
GetComponents = {
	type = "function", 
	description = " Class:Transform.GetComponents Static:False Public:True",
	args =  "()", 
	returns = "T[]",
 },
CompareTag = {
	type = "function", 
	description = " Class:Transform.CompareTag Static:False Public:True",
	args =  "( System.String tag )", 
	returns = "System.Boolean",
 },
SendMessageUpwards = {
	type = "function", 
	description = " Class:Transform.SendMessageUpwards Static:False Public:True",
	args =  "( System.String methodName, System.Object value, SendMessageOptions options )", 
	returns = "System.Void",
 },
SendMessageUpwards = {
	type = "function", 
	description = " Class:Transform.SendMessageUpwards Static:False Public:True",
	args =  "( System.String methodName, System.Object value )", 
	returns = "System.Void",
 },
SendMessageUpwards = {
	type = "function", 
	description = " Class:Transform.SendMessageUpwards Static:False Public:True",
	args =  "( System.String methodName )", 
	returns = "System.Void",
 },
SendMessageUpwards = {
	type = "function", 
	description = " Class:Transform.SendMessageUpwards Static:False Public:True",
	args =  "( System.String methodName, SendMessageOptions options )", 
	returns = "System.Void",
 },
SendMessage = {
	type = "function", 
	description = " Class:Transform.SendMessage Static:False Public:True",
	args =  "( System.String methodName, System.Object value, SendMessageOptions options )", 
	returns = "System.Void",
 },
SendMessage = {
	type = "function", 
	description = " Class:Transform.SendMessage Static:False Public:True",
	args =  "( System.String methodName, System.Object value )", 
	returns = "System.Void",
 },
SendMessage = {
	type = "function", 
	description = " Class:Transform.SendMessage Static:False Public:True",
	args =  "( System.String methodName )", 
	returns = "System.Void",
 },
SendMessage = {
	type = "function", 
	description = " Class:Transform.SendMessage Static:False Public:True",
	args =  "( System.String methodName, SendMessageOptions options )", 
	returns = "System.Void",
 },
BroadcastMessage = {
	type = "function", 
	description = " Class:Transform.BroadcastMessage Static:False Public:True",
	args =  "( System.String methodName, System.Object parameter, SendMessageOptions options )", 
	returns = "System.Void",
 },
BroadcastMessage = {
	type = "function", 
	description = " Class:Transform.BroadcastMessage Static:False Public:True",
	args =  "( System.String methodName, System.Object parameter )", 
	returns = "System.Void",
 },
BroadcastMessage = {
	type = "function", 
	description = " Class:Transform.BroadcastMessage Static:False Public:True",
	args =  "( System.String methodName )", 
	returns = "System.Void",
 },
BroadcastMessage = {
	type = "function", 
	description = " Class:Transform.BroadcastMessage Static:False Public:True",
	args =  "( System.String methodName, SendMessageOptions options )", 
	returns = "System.Void",
 },
get_rigidbody = {
	type = "function", 
	description = " Class:Transform.get_rigidbody Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_rigidbody2D = {
	type = "function", 
	description = " Class:Transform.get_rigidbody2D Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_camera = {
	type = "function", 
	description = " Class:Transform.get_camera Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_light = {
	type = "function", 
	description = " Class:Transform.get_light Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_animation = {
	type = "function", 
	description = " Class:Transform.get_animation Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_constantForce = {
	type = "function", 
	description = " Class:Transform.get_constantForce Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_renderer = {
	type = "function", 
	description = " Class:Transform.get_renderer Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_audio = {
	type = "function", 
	description = " Class:Transform.get_audio Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_guiText = {
	type = "function", 
	description = " Class:Transform.get_guiText Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_networkView = {
	type = "function", 
	description = " Class:Transform.get_networkView Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_guiElement = {
	type = "function", 
	description = " Class:Transform.get_guiElement Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_guiTexture = {
	type = "function", 
	description = " Class:Transform.get_guiTexture Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_collider = {
	type = "function", 
	description = " Class:Transform.get_collider Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_collider2D = {
	type = "function", 
	description = " Class:Transform.get_collider2D Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_hingeJoint = {
	type = "function", 
	description = " Class:Transform.get_hingeJoint Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_particleEmitter = {
	type = "function", 
	description = " Class:Transform.get_particleEmitter Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_particleSystem = {
	type = "function", 
	description = " Class:Transform.get_particleSystem Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Component",
 },
get_name = {
	type = "function", 
	description = " Class:Transform.get_name Static:False Public:True",
	args =  "()", 
	returns = "System.String",
 },
set_name = {
	type = "function", 
	description = " Class:Transform.set_name Static:False Public:True",
	args =  "( System.String value )", 
	returns = "System.Void",
 },
get_hideFlags = {
	type = "function", 
	description = " Class:Transform.get_hideFlags Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.HideFlags",
 },
set_hideFlags = {
	type = "function", 
	description = " Class:Transform.set_hideFlags Static:False Public:True",
	args =  "( HideFlags value )", 
	returns = "System.Void",
 },
ToString = {
	type = "function", 
	description = " Class:Transform.ToString Static:False Public:True",
	args =  "()", 
	returns = "System.String",
 },
GetInstanceID = {
	type = "function", 
	description = " Class:Transform.GetInstanceID Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
GetHashCode = {
	type = "function", 
	description = " Class:Transform.GetHashCode Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
Equals = {
	type = "function", 
	description = " Class:Transform.Equals Static:False Public:True",
	args =  "( System.Object other )", 
	returns = "System.Boolean",
 },
GetType = {
	type = "function", 
	description = " Class:Transform.GetType Static:False Public:True",
	args =  "()", 
	returns = "System.Type",
 },
position = {
	type = "value",
	description = "Class:Transform.position Type:UnityEngine.Vector3",
},
localPosition = {
	type = "value",
	description = "Class:Transform.localPosition Type:UnityEngine.Vector3",
},
eulerAngles = {
	type = "value",
	description = "Class:Transform.eulerAngles Type:UnityEngine.Vector3",
},
localEulerAngles = {
	type = "value",
	description = "Class:Transform.localEulerAngles Type:UnityEngine.Vector3",
},
right = {
	type = "value",
	description = "Class:Transform.right Type:UnityEngine.Vector3",
},
up = {
	type = "value",
	description = "Class:Transform.up Type:UnityEngine.Vector3",
},
forward = {
	type = "value",
	description = "Class:Transform.forward Type:UnityEngine.Vector3",
},
rotation = {
	type = "value",
	description = "Class:Transform.rotation Type:UnityEngine.Quaternion",
},
localRotation = {
	type = "value",
	description = "Class:Transform.localRotation Type:UnityEngine.Quaternion",
},
localScale = {
	type = "value",
	description = "Class:Transform.localScale Type:UnityEngine.Vector3",
},
parent = {
	type = "value",
	description = "Class:Transform.parent Type:UnityEngine.Transform",
},
worldToLocalMatrix = {
	type = "value",
	description = "Class:Transform.worldToLocalMatrix Type:UnityEngine.Matrix4x4",
},
localToWorldMatrix = {
	type = "value",
	description = "Class:Transform.localToWorldMatrix Type:UnityEngine.Matrix4x4",
},
root = {
	type = "value",
	description = "Class:Transform.root Type:UnityEngine.Transform",
},
childCount = {
	type = "value",
	description = "Class:Transform.childCount Type:System.Int32",
},
lossyScale = {
	type = "value",
	description = "Class:Transform.lossyScale Type:UnityEngine.Vector3",
},
hasChanged = {
	type = "value",
	description = "Class:Transform.hasChanged Type:System.Boolean",
},
hierarchyCapacity = {
	type = "value",
	description = "Class:Transform.hierarchyCapacity Type:System.Int32",
},
hierarchyCount = {
	type = "value",
	description = "Class:Transform.hierarchyCount Type:System.Int32",
},
transform = {
	type = "value",
	description = "Class:Transform.transform Type:UnityEngine.Transform",
},
gameObject = {
	type = "value",
	description = "Class:Transform.gameObject Type:UnityEngine.GameObject",
},
tag = {
	type = "value",
	description = "Class:Transform.tag Type:System.String",
},
rigidbody = {
	type = "value",
	description = "Class:Transform.rigidbody Type:UnityEngine.Component",
},
rigidbody2D = {
	type = "value",
	description = "Class:Transform.rigidbody2D Type:UnityEngine.Component",
},
camera = {
	type = "value",
	description = "Class:Transform.camera Type:UnityEngine.Component",
},
light = {
	type = "value",
	description = "Class:Transform.light Type:UnityEngine.Component",
},
animation = {
	type = "value",
	description = "Class:Transform.animation Type:UnityEngine.Component",
},
constantForce = {
	type = "value",
	description = "Class:Transform.constantForce Type:UnityEngine.Component",
},
renderer = {
	type = "value",
	description = "Class:Transform.renderer Type:UnityEngine.Component",
},
audio = {
	type = "value",
	description = "Class:Transform.audio Type:UnityEngine.Component",
},
guiText = {
	type = "value",
	description = "Class:Transform.guiText Type:UnityEngine.Component",
},
networkView = {
	type = "value",
	description = "Class:Transform.networkView Type:UnityEngine.Component",
},
guiElement = {
	type = "value",
	description = "Class:Transform.guiElement Type:UnityEngine.Component",
},
guiTexture = {
	type = "value",
	description = "Class:Transform.guiTexture Type:UnityEngine.Component",
},
collider = {
	type = "value",
	description = "Class:Transform.collider Type:UnityEngine.Component",
},
collider2D = {
	type = "value",
	description = "Class:Transform.collider2D Type:UnityEngine.Component",
},
hingeJoint = {
	type = "value",
	description = "Class:Transform.hingeJoint Type:UnityEngine.Component",
},
particleEmitter = {
	type = "value",
	description = "Class:Transform.particleEmitter Type:UnityEngine.Component",
},
particleSystem = {
	type = "value",
	description = "Class:Transform.particleSystem Type:UnityEngine.Component",
},
name = {
	type = "value",
	description = "Class:Transform.name Type:System.String",
},
hideFlags = {
	type = "value",
	description = "Class:Transform.hideFlags Type:UnityEngine.HideFlags",
},
GameObject = { 
	type = "class",
	description = "UnityEngine",
},
CreatePrimitive = {
	type = "function", 
	description = " Class:GameObject.CreatePrimitive Static:True Public:True",
	args =  "( PrimitiveType type )", 
	returns = "UnityEngine.GameObject",
 },
Time = { 
	type = "class",
	description = "UnityEngine",
},
get_time = {
	type = "function", 
	description = " Class:Time.get_time Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_timeSinceLevelLoad = {
	type = "function", 
	description = " Class:Time.get_timeSinceLevelLoad Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_deltaTime = {
	type = "function", 
	description = " Class:Time.get_deltaTime Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_fixedTime = {
	type = "function", 
	description = " Class:Time.get_fixedTime Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_unscaledTime = {
	type = "function", 
	description = " Class:Time.get_unscaledTime Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_unscaledDeltaTime = {
	type = "function", 
	description = " Class:Time.get_unscaledDeltaTime Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_fixedDeltaTime = {
	type = "function", 
	description = " Class:Time.get_fixedDeltaTime Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_fixedDeltaTime = {
	type = "function", 
	description = " Class:Time.set_fixedDeltaTime Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_maximumDeltaTime = {
	type = "function", 
	description = " Class:Time.get_maximumDeltaTime Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_maximumDeltaTime = {
	type = "function", 
	description = " Class:Time.set_maximumDeltaTime Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_smoothDeltaTime = {
	type = "function", 
	description = " Class:Time.get_smoothDeltaTime Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_maximumParticleDeltaTime = {
	type = "function", 
	description = " Class:Time.get_maximumParticleDeltaTime Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_maximumParticleDeltaTime = {
	type = "function", 
	description = " Class:Time.set_maximumParticleDeltaTime Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_timeScale = {
	type = "function", 
	description = " Class:Time.get_timeScale Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_timeScale = {
	type = "function", 
	description = " Class:Time.set_timeScale Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_frameCount = {
	type = "function", 
	description = " Class:Time.get_frameCount Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_renderedFrameCount = {
	type = "function", 
	description = " Class:Time.get_renderedFrameCount Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_realtimeSinceStartup = {
	type = "function", 
	description = " Class:Time.get_realtimeSinceStartup Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_captureFramerate = {
	type = "function", 
	description = " Class:Time.get_captureFramerate Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_captureFramerate = {
	type = "function", 
	description = " Class:Time.set_captureFramerate Static:True Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
Application = { 
	type = "class",
	description = "UnityEngine",
},
Quit = {
	type = "function", 
	description = " Class:Application.Quit Static:True Public:True",
	args =  "()", 
	returns = "System.Void",
 },
CancelQuit = {
	type = "function", 
	description = " Class:Application.CancelQuit Static:True Public:True",
	args =  "()", 
	returns = "System.Void",
 },
Unload = {
	type = "function", 
	description = " Class:Application.Unload Static:True Public:True",
	args =  "()", 
	returns = "System.Void",
 },
get_isLoadingLevel = {
	type = "function", 
	description = " Class:Application.get_isLoadingLevel Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
GetStreamProgressForLevel = {
	type = "function", 
	description = " Class:Application.GetStreamProgressForLevel Static:True Public:True",
	args =  "( Int32 levelIndex )", 
	returns = "System.Single",
 },
GetStreamProgressForLevel = {
	type = "function", 
	description = " Class:Application.GetStreamProgressForLevel Static:True Public:True",
	args =  "( System.String levelName )", 
	returns = "System.Single",
 },
get_streamedBytes = {
	type = "function", 
	description = " Class:Application.get_streamedBytes Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
CanStreamedLevelBeLoaded = {
	type = "function", 
	description = " Class:Application.CanStreamedLevelBeLoaded Static:True Public:True",
	args =  "( Int32 levelIndex )", 
	returns = "System.Boolean",
 },
CanStreamedLevelBeLoaded = {
	type = "function", 
	description = " Class:Application.CanStreamedLevelBeLoaded Static:True Public:True",
	args =  "( System.String levelName )", 
	returns = "System.Boolean",
 },
get_isPlaying = {
	type = "function", 
	description = " Class:Application.get_isPlaying Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_isEditor = {
	type = "function", 
	description = " Class:Application.get_isEditor Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_isWebPlayer = {
	type = "function", 
	description = " Class:Application.get_isWebPlayer Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_platform = {
	type = "function", 
	description = " Class:Application.get_platform Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.RuntimePlatform",
 },
get_isMobilePlatform = {
	type = "function", 
	description = " Class:Application.get_isMobilePlatform Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_isConsolePlatform = {
	type = "function", 
	description = " Class:Application.get_isConsolePlatform Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
CaptureScreenshot = {
	type = "function", 
	description = " Class:Application.CaptureScreenshot Static:True Public:True",
	args =  "( System.String filename, Int32 superSize )", 
	returns = "System.Void",
 },
CaptureScreenshot = {
	type = "function", 
	description = " Class:Application.CaptureScreenshot Static:True Public:True",
	args =  "( System.String filename )", 
	returns = "System.Void",
 },
get_runInBackground = {
	type = "function", 
	description = " Class:Application.get_runInBackground Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_runInBackground = {
	type = "function", 
	description = " Class:Application.set_runInBackground Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_isPlayer = {
	type = "function", 
	description = " Class:Application.get_isPlayer Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
HasProLicense = {
	type = "function", 
	description = " Class:Application.HasProLicense Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
DontDestroyOnLoad = {
	type = "function", 
	description = " Class:Application.DontDestroyOnLoad Static:True Public:True",
	args =  "( Object mono )", 
	returns = "System.Void",
 },
get_dataPath = {
	type = "function", 
	description = " Class:Application.get_dataPath Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_streamingAssetsPath = {
	type = "function", 
	description = " Class:Application.get_streamingAssetsPath Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_persistentDataPath = {
	type = "function", 
	description = " Class:Application.get_persistentDataPath Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_temporaryCachePath = {
	type = "function", 
	description = " Class:Application.get_temporaryCachePath Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_srcValue = {
	type = "function", 
	description = " Class:Application.get_srcValue Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_absoluteURL = {
	type = "function", 
	description = " Class:Application.get_absoluteURL Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
ExternalCall = {
	type = "function", 
	description = " Class:Application.ExternalCall Static:True Public:True",
	args =  "( System.String functionName, System.Object[] args )", 
	returns = "System.Void",
 },
ExternalEval = {
	type = "function", 
	description = " Class:Application.ExternalEval Static:True Public:True",
	args =  "( System.String script )", 
	returns = "System.Void",
 },
get_unityVersion = {
	type = "function", 
	description = " Class:Application.get_unityVersion Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_version = {
	type = "function", 
	description = " Class:Application.get_version Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_installerName = {
	type = "function", 
	description = " Class:Application.get_installerName Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_bundleIdentifier = {
	type = "function", 
	description = " Class:Application.get_bundleIdentifier Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_installMode = {
	type = "function", 
	description = " Class:Application.get_installMode Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.ApplicationInstallMode",
 },
get_sandboxType = {
	type = "function", 
	description = " Class:Application.get_sandboxType Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.ApplicationSandboxType",
 },
get_productName = {
	type = "function", 
	description = " Class:Application.get_productName Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_companyName = {
	type = "function", 
	description = " Class:Application.get_companyName Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
get_cloudProjectId = {
	type = "function", 
	description = " Class:Application.get_cloudProjectId Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
RequestAdvertisingIdentifierAsync = {
	type = "function", 
	description = " Class:Application.RequestAdvertisingIdentifierAsync Static:True Public:True",
	args =  "( AdvertisingIdentifierCallback delegateMethod )", 
	returns = "System.Boolean",
 },
get_webSecurityEnabled = {
	type = "function", 
	description = " Class:Application.get_webSecurityEnabled Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_webSecurityHostUrl = {
	type = "function", 
	description = " Class:Application.get_webSecurityHostUrl Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
OpenURL = {
	type = "function", 
	description = " Class:Application.OpenURL Static:True Public:True",
	args =  "( System.String url )", 
	returns = "System.Void",
 },
ForceCrash = {
	type = "function", 
	description = " Class:Application.ForceCrash Static:True Public:True",
	args =  "( Int32 mode )", 
	returns = "System.Void",
 },
get_targetFrameRate = {
	type = "function", 
	description = " Class:Application.get_targetFrameRate Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_targetFrameRate = {
	type = "function", 
	description = " Class:Application.set_targetFrameRate Static:True Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_systemLanguage = {
	type = "function", 
	description = " Class:Application.get_systemLanguage Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.SystemLanguage",
 },
add_logMessageReceived = {
	type = "function", 
	description = " Class:Application.add_logMessageReceived Static:True Public:True",
	args =  "( LogCallback value )", 
	returns = "System.Void",
 },
remove_logMessageReceived = {
	type = "function", 
	description = " Class:Application.remove_logMessageReceived Static:True Public:True",
	args =  "( LogCallback value )", 
	returns = "System.Void",
 },
add_logMessageReceivedThreaded = {
	type = "function", 
	description = " Class:Application.add_logMessageReceivedThreaded Static:True Public:True",
	args =  "( LogCallback value )", 
	returns = "System.Void",
 },
remove_logMessageReceivedThreaded = {
	type = "function", 
	description = " Class:Application.remove_logMessageReceivedThreaded Static:True Public:True",
	args =  "( LogCallback value )", 
	returns = "System.Void",
 },
get_stackTraceLogType = {
	type = "function", 
	description = " Class:Application.get_stackTraceLogType Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.StackTraceLogType",
 },
set_stackTraceLogType = {
	type = "function", 
	description = " Class:Application.set_stackTraceLogType Static:True Public:True",
	args =  "( StackTraceLogType value )", 
	returns = "System.Void",
 },
GetStackTraceLogType = {
	type = "function", 
	description = " Class:Application.GetStackTraceLogType Static:True Public:True",
	args =  "( LogType logType )", 
	returns = "UnityEngine.StackTraceLogType",
 },
SetStackTraceLogType = {
	type = "function", 
	description = " Class:Application.SetStackTraceLogType Static:True Public:True",
	args =  "( LogType logType, StackTraceLogType stackTraceType )", 
	returns = "System.Void",
 },
get_backgroundLoadingPriority = {
	type = "function", 
	description = " Class:Application.get_backgroundLoadingPriority Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.ThreadPriority",
 },
set_backgroundLoadingPriority = {
	type = "function", 
	description = " Class:Application.set_backgroundLoadingPriority Static:True Public:True",
	args =  "( ThreadPriority value )", 
	returns = "System.Void",
 },
get_internetReachability = {
	type = "function", 
	description = " Class:Application.get_internetReachability Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.NetworkReachability",
 },
get_genuine = {
	type = "function", 
	description = " Class:Application.get_genuine Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_genuineCheckAvailable = {
	type = "function", 
	description = " Class:Application.get_genuineCheckAvailable Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
RequestUserAuthorization = {
	type = "function", 
	description = " Class:Application.RequestUserAuthorization Static:True Public:True",
	args =  "( UserAuthorization mode )", 
	returns = "UnityEngine.AsyncOperation",
 },
HasUserAuthorization = {
	type = "function", 
	description = " Class:Application.HasUserAuthorization Static:True Public:True",
	args =  "( UserAuthorization mode )", 
	returns = "System.Boolean",
 },
get_isShowingSplashScreen = {
	type = "function", 
	description = " Class:Application.get_isShowingSplashScreen Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
RegisterLogCallback = {
	type = "function", 
	description = " Class:Application.RegisterLogCallback Static:True Public:True",
	args =  "( LogCallback handler )", 
	returns = "System.Void",
 },
RegisterLogCallbackThreaded = {
	type = "function", 
	description = " Class:Application.RegisterLogCallbackThreaded Static:True Public:True",
	args =  "( LogCallback handler )", 
	returns = "System.Void",
 },
get_levelCount = {
	type = "function", 
	description = " Class:Application.get_levelCount Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_loadedLevel = {
	type = "function", 
	description = " Class:Application.get_loadedLevel Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_loadedLevelName = {
	type = "function", 
	description = " Class:Application.get_loadedLevelName Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
LoadLevel = {
	type = "function", 
	description = " Class:Application.LoadLevel Static:True Public:True",
	args =  "( Int32 index )", 
	returns = "System.Void",
 },
LoadLevel = {
	type = "function", 
	description = " Class:Application.LoadLevel Static:True Public:True",
	args =  "( System.String name )", 
	returns = "System.Void",
 },
LoadLevelAdditive = {
	type = "function", 
	description = " Class:Application.LoadLevelAdditive Static:True Public:True",
	args =  "( Int32 index )", 
	returns = "System.Void",
 },
LoadLevelAdditive = {
	type = "function", 
	description = " Class:Application.LoadLevelAdditive Static:True Public:True",
	args =  "( System.String name )", 
	returns = "System.Void",
 },
LoadLevelAsync = {
	type = "function", 
	description = " Class:Application.LoadLevelAsync Static:True Public:True",
	args =  "( Int32 index )", 
	returns = "UnityEngine.AsyncOperation",
 },
LoadLevelAsync = {
	type = "function", 
	description = " Class:Application.LoadLevelAsync Static:True Public:True",
	args =  "( System.String levelName )", 
	returns = "UnityEngine.AsyncOperation",
 },
LoadLevelAdditiveAsync = {
	type = "function", 
	description = " Class:Application.LoadLevelAdditiveAsync Static:True Public:True",
	args =  "( Int32 index )", 
	returns = "UnityEngine.AsyncOperation",
 },
LoadLevelAdditiveAsync = {
	type = "function", 
	description = " Class:Application.LoadLevelAdditiveAsync Static:True Public:True",
	args =  "( System.String levelName )", 
	returns = "UnityEngine.AsyncOperation",
 },
UnloadLevel = {
	type = "function", 
	description = " Class:Application.UnloadLevel Static:True Public:True",
	args =  "( Int32 index )", 
	returns = "System.Boolean",
 },
UnloadLevel = {
	type = "function", 
	description = " Class:Application.UnloadLevel Static:True Public:True",
	args =  "( System.String scenePath )", 
	returns = "System.Boolean",
 },
get_absoluteUrl = {
	type = "function", 
	description = " Class:Application.get_absoluteUrl Static:True Public:True",
	args =  "()", 
	returns = "System.String",
 },
Screen = { 
	type = "class",
	description = "UnityEngine",
},
get_resolutions = {
	type = "function", 
	description = " Class:Screen.get_resolutions Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.Resolution[]",
 },
get_lockCursor = {
	type = "function", 
	description = " Class:Screen.get_lockCursor Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_lockCursor = {
	type = "function", 
	description = " Class:Screen.set_lockCursor Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_currentResolution = {
	type = "function", 
	description = " Class:Screen.get_currentResolution Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.Resolution",
 },
SetResolution = {
	type = "function", 
	description = " Class:Screen.SetResolution Static:True Public:True",
	args =  "( Int32 width, Int32 height, Boolean fullscreen, Int32 preferredRefreshRate )", 
	returns = "System.Void",
 },
SetResolution = {
	type = "function", 
	description = " Class:Screen.SetResolution Static:True Public:True",
	args =  "( Int32 width, Int32 height, Boolean fullscreen )", 
	returns = "System.Void",
 },
get_width = {
	type = "function", 
	description = " Class:Screen.get_width Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_height = {
	type = "function", 
	description = " Class:Screen.get_height Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_dpi = {
	type = "function", 
	description = " Class:Screen.get_dpi Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_fullScreen = {
	type = "function", 
	description = " Class:Screen.get_fullScreen Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_fullScreen = {
	type = "function", 
	description = " Class:Screen.set_fullScreen Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_autorotateToPortrait = {
	type = "function", 
	description = " Class:Screen.get_autorotateToPortrait Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_autorotateToPortrait = {
	type = "function", 
	description = " Class:Screen.set_autorotateToPortrait Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_autorotateToPortraitUpsideDown = {
	type = "function", 
	description = " Class:Screen.get_autorotateToPortraitUpsideDown Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_autorotateToPortraitUpsideDown = {
	type = "function", 
	description = " Class:Screen.set_autorotateToPortraitUpsideDown Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_autorotateToLandscapeLeft = {
	type = "function", 
	description = " Class:Screen.get_autorotateToLandscapeLeft Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_autorotateToLandscapeLeft = {
	type = "function", 
	description = " Class:Screen.set_autorotateToLandscapeLeft Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_autorotateToLandscapeRight = {
	type = "function", 
	description = " Class:Screen.get_autorotateToLandscapeRight Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_autorotateToLandscapeRight = {
	type = "function", 
	description = " Class:Screen.set_autorotateToLandscapeRight Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_orientation = {
	type = "function", 
	description = " Class:Screen.get_orientation Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.ScreenOrientation",
 },
set_orientation = {
	type = "function", 
	description = " Class:Screen.set_orientation Static:True Public:True",
	args =  "( ScreenOrientation value )", 
	returns = "System.Void",
 },
get_sleepTimeout = {
	type = "function", 
	description = " Class:Screen.get_sleepTimeout Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_sleepTimeout = {
	type = "function", 
	description = " Class:Screen.set_sleepTimeout Static:True Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_GetResolution = {
	type = "function", 
	description = " Class:Screen.get_GetResolution Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.Resolution[]",
 },
get_showCursor = {
	type = "function", 
	description = " Class:Screen.get_showCursor Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_showCursor = {
	type = "function", 
	description = " Class:Screen.set_showCursor Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
Component = { 
	type = "class",
	description = "UnityEngine",
},
Physics = { 
	type = "class",
	description = "UnityEngine",
},
get_gravity = {
	type = "function", 
	description = " Class:Physics.get_gravity Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_gravity = {
	type = "function", 
	description = " Class:Physics.set_gravity Static:True Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_minPenetrationForPenalty = {
	type = "function", 
	description = " Class:Physics.get_minPenetrationForPenalty Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_minPenetrationForPenalty = {
	type = "function", 
	description = " Class:Physics.set_minPenetrationForPenalty Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_defaultContactOffset = {
	type = "function", 
	description = " Class:Physics.get_defaultContactOffset Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_defaultContactOffset = {
	type = "function", 
	description = " Class:Physics.set_defaultContactOffset Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_bounceThreshold = {
	type = "function", 
	description = " Class:Physics.get_bounceThreshold Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_bounceThreshold = {
	type = "function", 
	description = " Class:Physics.set_bounceThreshold Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_bounceTreshold = {
	type = "function", 
	description = " Class:Physics.get_bounceTreshold Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_bounceTreshold = {
	type = "function", 
	description = " Class:Physics.set_bounceTreshold Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_sleepVelocity = {
	type = "function", 
	description = " Class:Physics.get_sleepVelocity Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_sleepVelocity = {
	type = "function", 
	description = " Class:Physics.set_sleepVelocity Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_sleepAngularVelocity = {
	type = "function", 
	description = " Class:Physics.get_sleepAngularVelocity Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_sleepAngularVelocity = {
	type = "function", 
	description = " Class:Physics.set_sleepAngularVelocity Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_maxAngularVelocity = {
	type = "function", 
	description = " Class:Physics.get_maxAngularVelocity Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_maxAngularVelocity = {
	type = "function", 
	description = " Class:Physics.set_maxAngularVelocity Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_defaultSolverIterations = {
	type = "function", 
	description = " Class:Physics.get_defaultSolverIterations Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_defaultSolverIterations = {
	type = "function", 
	description = " Class:Physics.set_defaultSolverIterations Static:True Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_solverIterationCount = {
	type = "function", 
	description = " Class:Physics.get_solverIterationCount Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_solverIterationCount = {
	type = "function", 
	description = " Class:Physics.set_solverIterationCount Static:True Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_defaultSolverVelocityIterations = {
	type = "function", 
	description = " Class:Physics.get_defaultSolverVelocityIterations Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_defaultSolverVelocityIterations = {
	type = "function", 
	description = " Class:Physics.set_defaultSolverVelocityIterations Static:True Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_solverVelocityIterationCount = {
	type = "function", 
	description = " Class:Physics.get_solverVelocityIterationCount Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_solverVelocityIterationCount = {
	type = "function", 
	description = " Class:Physics.set_solverVelocityIterationCount Static:True Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_sleepThreshold = {
	type = "function", 
	description = " Class:Physics.get_sleepThreshold Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_sleepThreshold = {
	type = "function", 
	description = " Class:Physics.set_sleepThreshold Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_queriesHitTriggers = {
	type = "function", 
	description = " Class:Physics.get_queriesHitTriggers Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_queriesHitTriggers = {
	type = "function", 
	description = " Class:Physics.set_queriesHitTriggers Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_queriesHitBackfaces = {
	type = "function", 
	description = " Class:Physics.get_queriesHitBackfaces Static:True Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_queriesHitBackfaces = {
	type = "function", 
	description = " Class:Physics.set_queriesHitBackfaces Static:True Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, Single maxDistance )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, RaycastHit& hitInfo, Single maxDistance )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, RaycastHit& hitInfo )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Ray ray, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Ray ray, Single maxDistance )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Ray ray )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Ray ray, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Ray ray, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Ray ray, RaycastHit& hitInfo, Single maxDistance )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Ray ray, RaycastHit& hitInfo )", 
	returns = "System.Boolean",
 },
Raycast = {
	type = "function", 
	description = " Class:Physics.Raycast Static:True Public:True",
	args =  "( Ray ray, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
RaycastAll = {
	type = "function", 
	description = " Class:Physics.RaycastAll Static:True Public:True",
	args =  "( Ray ray, Single maxDistance, Int32 layerMask )", 
	returns = "UnityEngine.RaycastHit[]",
 },
RaycastAll = {
	type = "function", 
	description = " Class:Physics.RaycastAll Static:True Public:True",
	args =  "( Ray ray, Single maxDistance )", 
	returns = "UnityEngine.RaycastHit[]",
 },
RaycastAll = {
	type = "function", 
	description = " Class:Physics.RaycastAll Static:True Public:True",
	args =  "( Ray ray )", 
	returns = "UnityEngine.RaycastHit[]",
 },
RaycastAll = {
	type = "function", 
	description = " Class:Physics.RaycastAll Static:True Public:True",
	args =  "( Ray ray, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
RaycastAll = {
	type = "function", 
	description = " Class:Physics.RaycastAll Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, Single maxDistance, Int32 layermask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
RaycastAll = {
	type = "function", 
	description = " Class:Physics.RaycastAll Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, Single maxDistance, Int32 layermask )", 
	returns = "UnityEngine.RaycastHit[]",
 },
RaycastAll = {
	type = "function", 
	description = " Class:Physics.RaycastAll Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, Single maxDistance )", 
	returns = "UnityEngine.RaycastHit[]",
 },
RaycastAll = {
	type = "function", 
	description = " Class:Physics.RaycastAll Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
RaycastNonAlloc = {
	type = "function", 
	description = " Class:Physics.RaycastNonAlloc Static:True Public:True",
	args =  "( Ray ray, RaycastHit[] results, Single maxDistance, Int32 layerMask )", 
	returns = "System.Int32",
 },
RaycastNonAlloc = {
	type = "function", 
	description = " Class:Physics.RaycastNonAlloc Static:True Public:True",
	args =  "( Ray ray, RaycastHit[] results, Single maxDistance )", 
	returns = "System.Int32",
 },
RaycastNonAlloc = {
	type = "function", 
	description = " Class:Physics.RaycastNonAlloc Static:True Public:True",
	args =  "( Ray ray, RaycastHit[] results )", 
	returns = "System.Int32",
 },
RaycastNonAlloc = {
	type = "function", 
	description = " Class:Physics.RaycastNonAlloc Static:True Public:True",
	args =  "( Ray ray, RaycastHit[] results, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Int32",
 },
RaycastNonAlloc = {
	type = "function", 
	description = " Class:Physics.RaycastNonAlloc Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, RaycastHit[] results, Single maxDistance, Int32 layermask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Int32",
 },
RaycastNonAlloc = {
	type = "function", 
	description = " Class:Physics.RaycastNonAlloc Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, RaycastHit[] results, Single maxDistance, Int32 layermask )", 
	returns = "System.Int32",
 },
RaycastNonAlloc = {
	type = "function", 
	description = " Class:Physics.RaycastNonAlloc Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, RaycastHit[] results, Single maxDistance )", 
	returns = "System.Int32",
 },
RaycastNonAlloc = {
	type = "function", 
	description = " Class:Physics.RaycastNonAlloc Static:True Public:True",
	args =  "( Vector3 origin, Vector3 direction, RaycastHit[] results )", 
	returns = "System.Int32",
 },
Linecast = {
	type = "function", 
	description = " Class:Physics.Linecast Static:True Public:True",
	args =  "( Vector3 start, Vector3 end, Int32 layerMask )", 
	returns = "System.Boolean",
 },
Linecast = {
	type = "function", 
	description = " Class:Physics.Linecast Static:True Public:True",
	args =  "( Vector3 start, Vector3 end )", 
	returns = "System.Boolean",
 },
Linecast = {
	type = "function", 
	description = " Class:Physics.Linecast Static:True Public:True",
	args =  "( Vector3 start, Vector3 end, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
Linecast = {
	type = "function", 
	description = " Class:Physics.Linecast Static:True Public:True",
	args =  "( Vector3 start, Vector3 end, RaycastHit& hitInfo, Int32 layerMask )", 
	returns = "System.Boolean",
 },
Linecast = {
	type = "function", 
	description = " Class:Physics.Linecast Static:True Public:True",
	args =  "( Vector3 start, Vector3 end, RaycastHit& hitInfo )", 
	returns = "System.Boolean",
 },
Linecast = {
	type = "function", 
	description = " Class:Physics.Linecast Static:True Public:True",
	args =  "( Vector3 start, Vector3 end, RaycastHit& hitInfo, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
OverlapSphere = {
	type = "function", 
	description = " Class:Physics.OverlapSphere Static:True Public:True",
	args =  "( Vector3 position, Single radius, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapSphere = {
	type = "function", 
	description = " Class:Physics.OverlapSphere Static:True Public:True",
	args =  "( Vector3 position, Single radius, Int32 layerMask )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapSphere = {
	type = "function", 
	description = " Class:Physics.OverlapSphere Static:True Public:True",
	args =  "( Vector3 position, Single radius )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapSphereNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapSphereNonAlloc Static:True Public:True",
	args =  "( Vector3 position, Single radius, Collider[] results, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Int32",
 },
OverlapSphereNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapSphereNonAlloc Static:True Public:True",
	args =  "( Vector3 position, Single radius, Collider[] results, Int32 layerMask )", 
	returns = "System.Int32",
 },
OverlapSphereNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapSphereNonAlloc Static:True Public:True",
	args =  "( Vector3 position, Single radius, Collider[] results )", 
	returns = "System.Int32",
 },
OverlapCapsule = {
	type = "function", 
	description = " Class:Physics.OverlapCapsule Static:True Public:True",
	args =  "( Vector3 point0, Vector3 point1, Single radius, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapCapsule = {
	type = "function", 
	description = " Class:Physics.OverlapCapsule Static:True Public:True",
	args =  "( Vector3 point0, Vector3 point1, Single radius, Int32 layerMask )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapCapsule = {
	type = "function", 
	description = " Class:Physics.OverlapCapsule Static:True Public:True",
	args =  "( Vector3 point0, Vector3 point1, Single radius )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapCapsuleNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapCapsuleNonAlloc Static:True Public:True",
	args =  "( Vector3 point0, Vector3 point1, Single radius, Collider[] results, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Int32",
 },
OverlapCapsuleNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapCapsuleNonAlloc Static:True Public:True",
	args =  "( Vector3 point0, Vector3 point1, Single radius, Collider[] results, Int32 layerMask )", 
	returns = "System.Int32",
 },
OverlapCapsuleNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapCapsuleNonAlloc Static:True Public:True",
	args =  "( Vector3 point0, Vector3 point1, Single radius, Collider[] results )", 
	returns = "System.Int32",
 },
CapsuleCast = {
	type = "function", 
	description = " Class:Physics.CapsuleCast Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
CapsuleCast = {
	type = "function", 
	description = " Class:Physics.CapsuleCast Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single maxDistance )", 
	returns = "System.Boolean",
 },
CapsuleCast = {
	type = "function", 
	description = " Class:Physics.CapsuleCast Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction )", 
	returns = "System.Boolean",
 },
CapsuleCast = {
	type = "function", 
	description = " Class:Physics.CapsuleCast Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
CapsuleCast = {
	type = "function", 
	description = " Class:Physics.CapsuleCast Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
CapsuleCast = {
	type = "function", 
	description = " Class:Physics.CapsuleCast Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit& hitInfo, Single maxDistance )", 
	returns = "System.Boolean",
 },
CapsuleCast = {
	type = "function", 
	description = " Class:Physics.CapsuleCast Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit& hitInfo )", 
	returns = "System.Boolean",
 },
CapsuleCast = {
	type = "function", 
	description = " Class:Physics.CapsuleCast Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, RaycastHit& hitInfo, Single maxDistance )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, RaycastHit& hitInfo )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Ray ray, Single radius, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Ray ray, Single radius, Single maxDistance )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Ray ray, Single radius )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Ray ray, Single radius, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Ray ray, Single radius, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Ray ray, Single radius, RaycastHit& hitInfo, Single maxDistance )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Ray ray, Single radius, RaycastHit& hitInfo )", 
	returns = "System.Boolean",
 },
SphereCast = {
	type = "function", 
	description = " Class:Physics.SphereCast Static:True Public:True",
	args =  "( Ray ray, Single radius, RaycastHit& hitInfo, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
CapsuleCastAll = {
	type = "function", 
	description = " Class:Physics.CapsuleCastAll Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single maxDistance, Int32 layermask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
CapsuleCastAll = {
	type = "function", 
	description = " Class:Physics.CapsuleCastAll Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single maxDistance, Int32 layermask )", 
	returns = "UnityEngine.RaycastHit[]",
 },
CapsuleCastAll = {
	type = "function", 
	description = " Class:Physics.CapsuleCastAll Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, Single maxDistance )", 
	returns = "UnityEngine.RaycastHit[]",
 },
CapsuleCastAll = {
	type = "function", 
	description = " Class:Physics.CapsuleCastAll Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
CapsuleCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.CapsuleCastNonAlloc Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit[] results, Single maxDistance, Int32 layermask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Int32",
 },
CapsuleCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.CapsuleCastNonAlloc Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit[] results, Single maxDistance, Int32 layermask )", 
	returns = "System.Int32",
 },
CapsuleCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.CapsuleCastNonAlloc Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit[] results, Single maxDistance )", 
	returns = "System.Int32",
 },
CapsuleCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.CapsuleCastNonAlloc Static:True Public:True",
	args =  "( Vector3 point1, Vector3 point2, Single radius, Vector3 direction, RaycastHit[] results )", 
	returns = "System.Int32",
 },
SphereCastAll = {
	type = "function", 
	description = " Class:Physics.SphereCastAll Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, Single maxDistance, Int32 layerMask )", 
	returns = "UnityEngine.RaycastHit[]",
 },
SphereCastAll = {
	type = "function", 
	description = " Class:Physics.SphereCastAll Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, Single maxDistance )", 
	returns = "UnityEngine.RaycastHit[]",
 },
SphereCastAll = {
	type = "function", 
	description = " Class:Physics.SphereCastAll Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
SphereCastAll = {
	type = "function", 
	description = " Class:Physics.SphereCastAll Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
SphereCastAll = {
	type = "function", 
	description = " Class:Physics.SphereCastAll Static:True Public:True",
	args =  "( Ray ray, Single radius, Single maxDistance, Int32 layerMask )", 
	returns = "UnityEngine.RaycastHit[]",
 },
SphereCastAll = {
	type = "function", 
	description = " Class:Physics.SphereCastAll Static:True Public:True",
	args =  "( Ray ray, Single radius, Single maxDistance )", 
	returns = "UnityEngine.RaycastHit[]",
 },
SphereCastAll = {
	type = "function", 
	description = " Class:Physics.SphereCastAll Static:True Public:True",
	args =  "( Ray ray, Single radius )", 
	returns = "UnityEngine.RaycastHit[]",
 },
SphereCastAll = {
	type = "function", 
	description = " Class:Physics.SphereCastAll Static:True Public:True",
	args =  "( Ray ray, Single radius, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
SphereCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.SphereCastNonAlloc Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, RaycastHit[] results, Single maxDistance, Int32 layerMask )", 
	returns = "System.Int32",
 },
SphereCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.SphereCastNonAlloc Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, RaycastHit[] results, Single maxDistance )", 
	returns = "System.Int32",
 },
SphereCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.SphereCastNonAlloc Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, RaycastHit[] results )", 
	returns = "System.Int32",
 },
SphereCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.SphereCastNonAlloc Static:True Public:True",
	args =  "( Vector3 origin, Single radius, Vector3 direction, RaycastHit[] results, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Int32",
 },
SphereCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.SphereCastNonAlloc Static:True Public:True",
	args =  "( Ray ray, Single radius, RaycastHit[] results, Single maxDistance, Int32 layerMask )", 
	returns = "System.Int32",
 },
SphereCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.SphereCastNonAlloc Static:True Public:True",
	args =  "( Ray ray, Single radius, RaycastHit[] results, Single maxDistance )", 
	returns = "System.Int32",
 },
SphereCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.SphereCastNonAlloc Static:True Public:True",
	args =  "( Ray ray, Single radius, RaycastHit[] results )", 
	returns = "System.Int32",
 },
SphereCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.SphereCastNonAlloc Static:True Public:True",
	args =  "( Ray ray, Single radius, RaycastHit[] results, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Int32",
 },
CheckSphere = {
	type = "function", 
	description = " Class:Physics.CheckSphere Static:True Public:True",
	args =  "( Vector3 position, Single radius, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
CheckSphere = {
	type = "function", 
	description = " Class:Physics.CheckSphere Static:True Public:True",
	args =  "( Vector3 position, Single radius, Int32 layerMask )", 
	returns = "System.Boolean",
 },
CheckSphere = {
	type = "function", 
	description = " Class:Physics.CheckSphere Static:True Public:True",
	args =  "( Vector3 position, Single radius )", 
	returns = "System.Boolean",
 },
CheckCapsule = {
	type = "function", 
	description = " Class:Physics.CheckCapsule Static:True Public:True",
	args =  "( Vector3 start, Vector3 end, Single radius, Int32 layermask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
CheckCapsule = {
	type = "function", 
	description = " Class:Physics.CheckCapsule Static:True Public:True",
	args =  "( Vector3 start, Vector3 end, Single radius, Int32 layermask )", 
	returns = "System.Boolean",
 },
CheckCapsule = {
	type = "function", 
	description = " Class:Physics.CheckCapsule Static:True Public:True",
	args =  "( Vector3 start, Vector3 end, Single radius )", 
	returns = "System.Boolean",
 },
CheckBox = {
	type = "function", 
	description = " Class:Physics.CheckBox Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Quaternion orientation, Int32 layermask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
CheckBox = {
	type = "function", 
	description = " Class:Physics.CheckBox Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Quaternion orientation, Int32 layermask )", 
	returns = "System.Boolean",
 },
CheckBox = {
	type = "function", 
	description = " Class:Physics.CheckBox Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Quaternion orientation )", 
	returns = "System.Boolean",
 },
CheckBox = {
	type = "function", 
	description = " Class:Physics.CheckBox Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents )", 
	returns = "System.Boolean",
 },
OverlapBox = {
	type = "function", 
	description = " Class:Physics.OverlapBox Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Quaternion orientation, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapBox = {
	type = "function", 
	description = " Class:Physics.OverlapBox Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Quaternion orientation, Int32 layerMask )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapBox = {
	type = "function", 
	description = " Class:Physics.OverlapBox Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Quaternion orientation )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapBox = {
	type = "function", 
	description = " Class:Physics.OverlapBox Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents )", 
	returns = "UnityEngine.Collider[]",
 },
OverlapBoxNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapBoxNonAlloc Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Collider[] results, Quaternion orientation, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Int32",
 },
OverlapBoxNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapBoxNonAlloc Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Collider[] results, Quaternion orientation, Int32 layerMask )", 
	returns = "System.Int32",
 },
OverlapBoxNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapBoxNonAlloc Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Collider[] results, Quaternion orientation )", 
	returns = "System.Int32",
 },
OverlapBoxNonAlloc = {
	type = "function", 
	description = " Class:Physics.OverlapBoxNonAlloc Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Collider[] results )", 
	returns = "System.Int32",
 },
BoxCastAll = {
	type = "function", 
	description = " Class:Physics.BoxCastAll Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, Single maxDistance, Int32 layermask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
BoxCastAll = {
	type = "function", 
	description = " Class:Physics.BoxCastAll Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, Single maxDistance, Int32 layermask )", 
	returns = "UnityEngine.RaycastHit[]",
 },
BoxCastAll = {
	type = "function", 
	description = " Class:Physics.BoxCastAll Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, Single maxDistance )", 
	returns = "UnityEngine.RaycastHit[]",
 },
BoxCastAll = {
	type = "function", 
	description = " Class:Physics.BoxCastAll Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation )", 
	returns = "UnityEngine.RaycastHit[]",
 },
BoxCastAll = {
	type = "function", 
	description = " Class:Physics.BoxCastAll Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction )", 
	returns = "UnityEngine.RaycastHit[]",
 },
BoxCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.BoxCastNonAlloc Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit[] results, Quaternion orientation, Single maxDistance, Int32 layermask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Int32",
 },
BoxCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.BoxCastNonAlloc Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit[] results, Quaternion orientation, Single maxDistance, Int32 layermask )", 
	returns = "System.Int32",
 },
BoxCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.BoxCastNonAlloc Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit[] results, Quaternion orientation, Single maxDistance )", 
	returns = "System.Int32",
 },
BoxCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.BoxCastNonAlloc Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit[] results, Quaternion orientation )", 
	returns = "System.Int32",
 },
BoxCastNonAlloc = {
	type = "function", 
	description = " Class:Physics.BoxCastNonAlloc Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit[] results )", 
	returns = "System.Int32",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, Single maxDistance )", 
	returns = "System.Boolean",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation )", 
	returns = "System.Boolean",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction )", 
	returns = "System.Boolean",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, Quaternion orientation, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit& hitInfo, Quaternion orientation, Single maxDistance, Int32 layerMask )", 
	returns = "System.Boolean",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit& hitInfo, Quaternion orientation, Single maxDistance )", 
	returns = "System.Boolean",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit& hitInfo, Quaternion orientation )", 
	returns = "System.Boolean",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit& hitInfo )", 
	returns = "System.Boolean",
 },
BoxCast = {
	type = "function", 
	description = " Class:Physics.BoxCast Static:True Public:True",
	args =  "( Vector3 center, Vector3 halfExtents, Vector3 direction, RaycastHit& hitInfo, Quaternion orientation, Single maxDistance, Int32 layerMask, QueryTriggerInteraction queryTriggerInteraction )", 
	returns = "System.Boolean",
 },
get_penetrationPenaltyForce = {
	type = "function", 
	description = " Class:Physics.get_penetrationPenaltyForce Static:True Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_penetrationPenaltyForce = {
	type = "function", 
	description = " Class:Physics.set_penetrationPenaltyForce Static:True Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
IgnoreCollision = {
	type = "function", 
	description = " Class:Physics.IgnoreCollision Static:True Public:True",
	args =  "( Collider collider1, Collider collider2, Boolean ignore )", 
	returns = "System.Void",
 },
IgnoreCollision = {
	type = "function", 
	description = " Class:Physics.IgnoreCollision Static:True Public:True",
	args =  "( Collider collider1, Collider collider2 )", 
	returns = "System.Void",
 },
IgnoreLayerCollision = {
	type = "function", 
	description = " Class:Physics.IgnoreLayerCollision Static:True Public:True",
	args =  "( Int32 layer1, Int32 layer2, Boolean ignore )", 
	returns = "System.Void",
 },
IgnoreLayerCollision = {
	type = "function", 
	description = " Class:Physics.IgnoreLayerCollision Static:True Public:True",
	args =  "( Int32 layer1, Int32 layer2 )", 
	returns = "System.Void",
 },
GetIgnoreLayerCollision = {
	type = "function", 
	description = " Class:Physics.GetIgnoreLayerCollision Static:True Public:True",
	args =  "( Int32 layer1, Int32 layer2 )", 
	returns = "System.Boolean",
 },
Collider = { 
	type = "class",
	description = "UnityEngine",
},
get_enabled = {
	type = "function", 
	description = " Class:Collider.get_enabled Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_enabled = {
	type = "function", 
	description = " Class:Collider.set_enabled Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_attachedRigidbody = {
	type = "function", 
	description = " Class:Collider.get_attachedRigidbody Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Rigidbody",
 },
get_isTrigger = {
	type = "function", 
	description = " Class:Collider.get_isTrigger Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_isTrigger = {
	type = "function", 
	description = " Class:Collider.set_isTrigger Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_contactOffset = {
	type = "function", 
	description = " Class:Collider.get_contactOffset Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_contactOffset = {
	type = "function", 
	description = " Class:Collider.set_contactOffset Static:False Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_material = {
	type = "function", 
	description = " Class:Collider.get_material Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.PhysicMaterial",
 },
set_material = {
	type = "function", 
	description = " Class:Collider.set_material Static:False Public:True",
	args =  "( PhysicMaterial value )", 
	returns = "System.Void",
 },
ClosestPointOnBounds = {
	type = "function", 
	description = " Class:Collider.ClosestPointOnBounds Static:False Public:True",
	args =  "( Vector3 position )", 
	returns = "UnityEngine.Vector3",
 },
get_sharedMaterial = {
	type = "function", 
	description = " Class:Collider.get_sharedMaterial Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.PhysicMaterial",
 },
set_sharedMaterial = {
	type = "function", 
	description = " Class:Collider.set_sharedMaterial Static:False Public:True",
	args =  "( PhysicMaterial value )", 
	returns = "System.Void",
 },
get_bounds = {
	type = "function", 
	description = " Class:Collider.get_bounds Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Bounds",
 },
Texture = { 
	type = "class",
	description = "UnityEngine",
},
get_masterTextureLimit = {
	type = "function", 
	description = " Class:Texture.get_masterTextureLimit Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_masterTextureLimit = {
	type = "function", 
	description = " Class:Texture.set_masterTextureLimit Static:True Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_anisotropicFiltering = {
	type = "function", 
	description = " Class:Texture.get_anisotropicFiltering Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.AnisotropicFiltering",
 },
set_anisotropicFiltering = {
	type = "function", 
	description = " Class:Texture.set_anisotropicFiltering Static:True Public:True",
	args =  "( AnisotropicFiltering value )", 
	returns = "System.Void",
 },
SetGlobalAnisotropicFilteringLimits = {
	type = "function", 
	description = " Class:Texture.SetGlobalAnisotropicFilteringLimits Static:True Public:True",
	args =  "( Int32 forcedMin, Int32 globalMax )", 
	returns = "System.Void",
 },
Texture2D = { 
	type = "class",
	description = "UnityEngine",
},
get_mipmapCount = {
	type = "function", 
	description = " Class:Texture2D.get_mipmapCount Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
CreateExternalTexture = {
	type = "function", 
	description = " Class:Texture2D.CreateExternalTexture Static:True Public:True",
	args =  "( Int32 width, Int32 height, TextureFormat format, Boolean mipmap, Boolean linear, IntPtr nativeTex )", 
	returns = "UnityEngine.Texture2D",
 },
UpdateExternalTexture = {
	type = "function", 
	description = " Class:Texture2D.UpdateExternalTexture Static:False Public:True",
	args =  "( IntPtr nativeTex )", 
	returns = "System.Void",
 },
get_format = {
	type = "function", 
	description = " Class:Texture2D.get_format Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.TextureFormat",
 },
get_whiteTexture = {
	type = "function", 
	description = " Class:Texture2D.get_whiteTexture Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.Texture2D",
 },
get_blackTexture = {
	type = "function", 
	description = " Class:Texture2D.get_blackTexture Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.Texture2D",
 },
SetPixel = {
	type = "function", 
	description = " Class:Texture2D.SetPixel Static:False Public:True",
	args =  "( Int32 x, Int32 y, Color color )", 
	returns = "System.Void",
 },
GetPixel = {
	type = "function", 
	description = " Class:Texture2D.GetPixel Static:False Public:True",
	args =  "( Int32 x, Int32 y )", 
	returns = "UnityEngine.Color",
 },
GetPixelBilinear = {
	type = "function", 
	description = " Class:Texture2D.GetPixelBilinear Static:False Public:True",
	args =  "( Single u, Single v )", 
	returns = "UnityEngine.Color",
 },
SetPixels = {
	type = "function", 
	description = " Class:Texture2D.SetPixels Static:False Public:True",
	args =  "( Color[] colors )", 
	returns = "System.Void",
 },
SetPixels = {
	type = "function", 
	description = " Class:Texture2D.SetPixels Static:False Public:True",
	args =  "( Color[] colors, Int32 miplevel )", 
	returns = "System.Void",
 },
SetPixels = {
	type = "function", 
	description = " Class:Texture2D.SetPixels Static:False Public:True",
	args =  "( Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight, Color[] colors, Int32 miplevel )", 
	returns = "System.Void",
 },
SetPixels = {
	type = "function", 
	description = " Class:Texture2D.SetPixels Static:False Public:True",
	args =  "( Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight, Color[] colors )", 
	returns = "System.Void",
 },
SetPixels32 = {
	type = "function", 
	description = " Class:Texture2D.SetPixels32 Static:False Public:True",
	args =  "( Color32[] colors )", 
	returns = "System.Void",
 },
SetPixels32 = {
	type = "function", 
	description = " Class:Texture2D.SetPixels32 Static:False Public:True",
	args =  "( Color32[] colors, Int32 miplevel )", 
	returns = "System.Void",
 },
SetPixels32 = {
	type = "function", 
	description = " Class:Texture2D.SetPixels32 Static:False Public:True",
	args =  "( Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight, Color32[] colors )", 
	returns = "System.Void",
 },
SetPixels32 = {
	type = "function", 
	description = " Class:Texture2D.SetPixels32 Static:False Public:True",
	args =  "( Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight, Color32[] colors, Int32 miplevel )", 
	returns = "System.Void",
 },
LoadImage = {
	type = "function", 
	description = " Class:Texture2D.LoadImage Static:False Public:True",
	args =  "( Byte[] data, Boolean markNonReadable )", 
	returns = "System.Boolean",
 },
LoadImage = {
	type = "function", 
	description = " Class:Texture2D.LoadImage Static:False Public:True",
	args =  "( Byte[] data )", 
	returns = "System.Boolean",
 },
LoadRawTextureData = {
	type = "function", 
	description = " Class:Texture2D.LoadRawTextureData Static:False Public:True",
	args =  "( Byte[] data )", 
	returns = "System.Void",
 },
LoadRawTextureData = {
	type = "function", 
	description = " Class:Texture2D.LoadRawTextureData Static:False Public:True",
	args =  "( IntPtr data, Int32 size )", 
	returns = "System.Void",
 },
GetRawTextureData = {
	type = "function", 
	description = " Class:Texture2D.GetRawTextureData Static:False Public:True",
	args =  "()", 
	returns = "System.Byte[]",
 },
GetPixels = {
	type = "function", 
	description = " Class:Texture2D.GetPixels Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Color[]",
 },
GetPixels = {
	type = "function", 
	description = " Class:Texture2D.GetPixels Static:False Public:True",
	args =  "( Int32 miplevel )", 
	returns = "UnityEngine.Color[]",
 },
GetPixels = {
	type = "function", 
	description = " Class:Texture2D.GetPixels Static:False Public:True",
	args =  "( Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight, Int32 miplevel )", 
	returns = "UnityEngine.Color[]",
 },
GetPixels = {
	type = "function", 
	description = " Class:Texture2D.GetPixels Static:False Public:True",
	args =  "( Int32 x, Int32 y, Int32 blockWidth, Int32 blockHeight )", 
	returns = "UnityEngine.Color[]",
 },
GetPixels32 = {
	type = "function", 
	description = " Class:Texture2D.GetPixels32 Static:False Public:True",
	args =  "( Int32 miplevel )", 
	returns = "UnityEngine.Color32[]",
 },
GetPixels32 = {
	type = "function", 
	description = " Class:Texture2D.GetPixels32 Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Color32[]",
 },
Apply = {
	type = "function", 
	description = " Class:Texture2D.Apply Static:False Public:True",
	args =  "( Boolean updateMipmaps, Boolean makeNoLongerReadable )", 
	returns = "System.Void",
 },
Apply = {
	type = "function", 
	description = " Class:Texture2D.Apply Static:False Public:True",
	args =  "( Boolean updateMipmaps )", 
	returns = "System.Void",
 },
Apply = {
	type = "function", 
	description = " Class:Texture2D.Apply Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
Resize = {
	type = "function", 
	description = " Class:Texture2D.Resize Static:False Public:True",
	args =  "( Int32 width, Int32 height, TextureFormat format, Boolean hasMipMap )", 
	returns = "System.Boolean",
 },
Resize = {
	type = "function", 
	description = " Class:Texture2D.Resize Static:False Public:True",
	args =  "( Int32 width, Int32 height )", 
	returns = "System.Boolean",
 },
Compress = {
	type = "function", 
	description = " Class:Texture2D.Compress Static:False Public:True",
	args =  "( Boolean highQuality )", 
	returns = "System.Void",
 },
PackTextures = {
	type = "function", 
	description = " Class:Texture2D.PackTextures Static:False Public:True",
	args =  "( Texture2D[] textures, Int32 padding, Int32 maximumAtlasSize, Boolean makeNoLongerReadable )", 
	returns = "UnityEngine.Rect[]",
 },
PackTextures = {
	type = "function", 
	description = " Class:Texture2D.PackTextures Static:False Public:True",
	args =  "( Texture2D[] textures, Int32 padding, Int32 maximumAtlasSize )", 
	returns = "UnityEngine.Rect[]",
 },
PackTextures = {
	type = "function", 
	description = " Class:Texture2D.PackTextures Static:False Public:True",
	args =  "( Texture2D[] textures, Int32 padding )", 
	returns = "UnityEngine.Rect[]",
 },
ReadPixels = {
	type = "function", 
	description = " Class:Texture2D.ReadPixels Static:False Public:True",
	args =  "( Rect source, Int32 destX, Int32 destY, Boolean recalculateMipMaps )", 
	returns = "System.Void",
 },
ReadPixels = {
	type = "function", 
	description = " Class:Texture2D.ReadPixels Static:False Public:True",
	args =  "( Rect source, Int32 destX, Int32 destY )", 
	returns = "System.Void",
 },
EncodeToPNG = {
	type = "function", 
	description = " Class:Texture2D.EncodeToPNG Static:False Public:True",
	args =  "()", 
	returns = "System.Byte[]",
 },
EncodeToJPG = {
	type = "function", 
	description = " Class:Texture2D.EncodeToJPG Static:False Public:True",
	args =  "( Int32 quality )", 
	returns = "System.Byte[]",
 },
EncodeToJPG = {
	type = "function", 
	description = " Class:Texture2D.EncodeToJPG Static:False Public:True",
	args =  "()", 
	returns = "System.Byte[]",
 },
get_alphaIsTransparency = {
	type = "function", 
	description = " Class:Texture2D.get_alphaIsTransparency Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_alphaIsTransparency = {
	type = "function", 
	description = " Class:Texture2D.set_alphaIsTransparency Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
Shader = { 
	type = "class",
	description = "UnityEngine",
},
Find = {
	type = "function", 
	description = " Class:Shader.Find Static:True Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Shader",
 },
get_isSupported = {
	type = "function", 
	description = " Class:Shader.get_isSupported Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
EnableKeyword = {
	type = "function", 
	description = " Class:Shader.EnableKeyword Static:True Public:True",
	args =  "( System.String keyword )", 
	returns = "System.Void",
 },
DisableKeyword = {
	type = "function", 
	description = " Class:Shader.DisableKeyword Static:True Public:True",
	args =  "( System.String keyword )", 
	returns = "System.Void",
 },
IsKeywordEnabled = {
	type = "function", 
	description = " Class:Shader.IsKeywordEnabled Static:True Public:True",
	args =  "( System.String keyword )", 
	returns = "System.Boolean",
 },
get_maximumLOD = {
	type = "function", 
	description = " Class:Shader.get_maximumLOD Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_maximumLOD = {
	type = "function", 
	description = " Class:Shader.set_maximumLOD Static:False Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_globalMaximumLOD = {
	type = "function", 
	description = " Class:Shader.get_globalMaximumLOD Static:True Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
set_globalMaximumLOD = {
	type = "function", 
	description = " Class:Shader.set_globalMaximumLOD Static:True Public:True",
	args =  "( Int32 value )", 
	returns = "System.Void",
 },
get_renderQueue = {
	type = "function", 
	description = " Class:Shader.get_renderQueue Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
SetGlobalVector = {
	type = "function", 
	description = " Class:Shader.SetGlobalVector Static:True Public:True",
	args =  "( System.String propertyName, Vector4 vec )", 
	returns = "System.Void",
 },
SetGlobalVector = {
	type = "function", 
	description = " Class:Shader.SetGlobalVector Static:True Public:True",
	args =  "( Int32 nameID, Vector4 vec )", 
	returns = "System.Void",
 },
SetGlobalColor = {
	type = "function", 
	description = " Class:Shader.SetGlobalColor Static:True Public:True",
	args =  "( System.String propertyName, Color color )", 
	returns = "System.Void",
 },
SetGlobalColor = {
	type = "function", 
	description = " Class:Shader.SetGlobalColor Static:True Public:True",
	args =  "( Int32 nameID, Color color )", 
	returns = "System.Void",
 },
SetGlobalFloat = {
	type = "function", 
	description = " Class:Shader.SetGlobalFloat Static:True Public:True",
	args =  "( System.String propertyName, Single value )", 
	returns = "System.Void",
 },
SetGlobalFloat = {
	type = "function", 
	description = " Class:Shader.SetGlobalFloat Static:True Public:True",
	args =  "( Int32 nameID, Single value )", 
	returns = "System.Void",
 },
SetGlobalInt = {
	type = "function", 
	description = " Class:Shader.SetGlobalInt Static:True Public:True",
	args =  "( System.String propertyName, Int32 value )", 
	returns = "System.Void",
 },
SetGlobalInt = {
	type = "function", 
	description = " Class:Shader.SetGlobalInt Static:True Public:True",
	args =  "( Int32 nameID, Int32 value )", 
	returns = "System.Void",
 },
SetGlobalMatrix = {
	type = "function", 
	description = " Class:Shader.SetGlobalMatrix Static:True Public:True",
	args =  "( System.String propertyName, Matrix4x4 mat )", 
	returns = "System.Void",
 },
SetGlobalMatrix = {
	type = "function", 
	description = " Class:Shader.SetGlobalMatrix Static:True Public:True",
	args =  "( Int32 nameID, Matrix4x4 mat )", 
	returns = "System.Void",
 },
SetGlobalTexture = {
	type = "function", 
	description = " Class:Shader.SetGlobalTexture Static:True Public:True",
	args =  "( System.String propertyName, Texture tex )", 
	returns = "System.Void",
 },
SetGlobalTexture = {
	type = "function", 
	description = " Class:Shader.SetGlobalTexture Static:True Public:True",
	args =  "( Int32 nameID, Texture tex )", 
	returns = "System.Void",
 },
SetGlobalFloatArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalFloatArray Static:True Public:True",
	args =  "( System.String name, System.Collections.Generic.List`1[[System.Single, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] values )", 
	returns = "System.Void",
 },
SetGlobalFloatArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalFloatArray Static:True Public:True",
	args =  "( Int32 nameID, System.Collections.Generic.List`1[[System.Single, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] values )", 
	returns = "System.Void",
 },
SetGlobalFloatArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalFloatArray Static:True Public:True",
	args =  "( System.String propertyName, Single[] values )", 
	returns = "System.Void",
 },
SetGlobalFloatArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalFloatArray Static:True Public:True",
	args =  "( Int32 nameID, Single[] values )", 
	returns = "System.Void",
 },
SetGlobalVectorArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalVectorArray Static:True Public:True",
	args =  "( System.String name, System.Collections.Generic.List`1[[UnityEngine.Vector4, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] values )", 
	returns = "System.Void",
 },
SetGlobalVectorArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalVectorArray Static:True Public:True",
	args =  "( Int32 nameID, System.Collections.Generic.List`1[[UnityEngine.Vector4, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] values )", 
	returns = "System.Void",
 },
SetGlobalVectorArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalVectorArray Static:True Public:True",
	args =  "( System.String propertyName, Vector4[] values )", 
	returns = "System.Void",
 },
SetGlobalVectorArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalVectorArray Static:True Public:True",
	args =  "( Int32 nameID, Vector4[] values )", 
	returns = "System.Void",
 },
SetGlobalMatrixArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalMatrixArray Static:True Public:True",
	args =  "( System.String name, System.Collections.Generic.List`1[[UnityEngine.Matrix4x4, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] values )", 
	returns = "System.Void",
 },
SetGlobalMatrixArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalMatrixArray Static:True Public:True",
	args =  "( Int32 nameID, System.Collections.Generic.List`1[[UnityEngine.Matrix4x4, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] values )", 
	returns = "System.Void",
 },
SetGlobalMatrixArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalMatrixArray Static:True Public:True",
	args =  "( System.String propertyName, Matrix4x4[] values )", 
	returns = "System.Void",
 },
SetGlobalMatrixArray = {
	type = "function", 
	description = " Class:Shader.SetGlobalMatrixArray Static:True Public:True",
	args =  "( Int32 nameID, Matrix4x4[] values )", 
	returns = "System.Void",
 },
SetGlobalBuffer = {
	type = "function", 
	description = " Class:Shader.SetGlobalBuffer Static:True Public:True",
	args =  "( System.String name, ComputeBuffer buffer )", 
	returns = "System.Void",
 },
SetGlobalBuffer = {
	type = "function", 
	description = " Class:Shader.SetGlobalBuffer Static:True Public:True",
	args =  "( Int32 nameID, ComputeBuffer buffer )", 
	returns = "System.Void",
 },
GetGlobalFloat = {
	type = "function", 
	description = " Class:Shader.GetGlobalFloat Static:True Public:True",
	args =  "( System.String name )", 
	returns = "System.Single",
 },
GetGlobalFloat = {
	type = "function", 
	description = " Class:Shader.GetGlobalFloat Static:True Public:True",
	args =  "( Int32 nameID )", 
	returns = "System.Single",
 },
GetGlobalInt = {
	type = "function", 
	description = " Class:Shader.GetGlobalInt Static:True Public:True",
	args =  "( System.String name )", 
	returns = "System.Int32",
 },
GetGlobalInt = {
	type = "function", 
	description = " Class:Shader.GetGlobalInt Static:True Public:True",
	args =  "( Int32 nameID )", 
	returns = "System.Int32",
 },
GetGlobalVector = {
	type = "function", 
	description = " Class:Shader.GetGlobalVector Static:True Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Vector4",
 },
GetGlobalVector = {
	type = "function", 
	description = " Class:Shader.GetGlobalVector Static:True Public:True",
	args =  "( Int32 nameID )", 
	returns = "UnityEngine.Vector4",
 },
GetGlobalColor = {
	type = "function", 
	description = " Class:Shader.GetGlobalColor Static:True Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Color",
 },
GetGlobalColor = {
	type = "function", 
	description = " Class:Shader.GetGlobalColor Static:True Public:True",
	args =  "( Int32 nameID )", 
	returns = "UnityEngine.Color",
 },
GetGlobalMatrix = {
	type = "function", 
	description = " Class:Shader.GetGlobalMatrix Static:True Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Matrix4x4",
 },
GetGlobalMatrix = {
	type = "function", 
	description = " Class:Shader.GetGlobalMatrix Static:True Public:True",
	args =  "( Int32 nameID )", 
	returns = "UnityEngine.Matrix4x4",
 },
GetGlobalTexture = {
	type = "function", 
	description = " Class:Shader.GetGlobalTexture Static:True Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Texture",
 },
GetGlobalTexture = {
	type = "function", 
	description = " Class:Shader.GetGlobalTexture Static:True Public:True",
	args =  "( Int32 nameID )", 
	returns = "UnityEngine.Texture",
 },
GetGlobalFloatArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalFloatArray Static:True Public:True",
	args =  "( System.String name, System.Collections.Generic.List`1[[System.Single, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] values )", 
	returns = "System.Void",
 },
GetGlobalFloatArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalFloatArray Static:True Public:True",
	args =  "( Int32 nameID, System.Collections.Generic.List`1[[System.Single, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] values )", 
	returns = "System.Void",
 },
GetGlobalFloatArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalFloatArray Static:True Public:True",
	args =  "( System.String name )", 
	returns = "System.Single[]",
 },
GetGlobalFloatArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalFloatArray Static:True Public:True",
	args =  "( Int32 nameID )", 
	returns = "System.Single[]",
 },
GetGlobalVectorArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalVectorArray Static:True Public:True",
	args =  "( System.String name, System.Collections.Generic.List`1[[UnityEngine.Vector4, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] values )", 
	returns = "System.Void",
 },
GetGlobalVectorArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalVectorArray Static:True Public:True",
	args =  "( Int32 nameID, System.Collections.Generic.List`1[[UnityEngine.Vector4, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] values )", 
	returns = "System.Void",
 },
GetGlobalVectorArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalVectorArray Static:True Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Vector4[]",
 },
GetGlobalVectorArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalVectorArray Static:True Public:True",
	args =  "( Int32 nameID )", 
	returns = "UnityEngine.Vector4[]",
 },
GetGlobalMatrixArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalMatrixArray Static:True Public:True",
	args =  "( System.String name, System.Collections.Generic.List`1[[UnityEngine.Matrix4x4, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] values )", 
	returns = "System.Void",
 },
GetGlobalMatrixArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalMatrixArray Static:True Public:True",
	args =  "( Int32 nameID, System.Collections.Generic.List`1[[UnityEngine.Matrix4x4, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] values )", 
	returns = "System.Void",
 },
GetGlobalMatrixArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalMatrixArray Static:True Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Matrix4x4[]",
 },
GetGlobalMatrixArray = {
	type = "function", 
	description = " Class:Shader.GetGlobalMatrixArray Static:True Public:True",
	args =  "( Int32 nameID )", 
	returns = "UnityEngine.Matrix4x4[]",
 },
PropertyToID = {
	type = "function", 
	description = " Class:Shader.PropertyToID Static:True Public:True",
	args =  "( System.String name )", 
	returns = "System.Int32",
 },
WarmupAllShaders = {
	type = "function", 
	description = " Class:Shader.WarmupAllShaders Static:True Public:True",
	args =  "()", 
	returns = "System.Void",
 },
SetGlobalTexGenMode = {
	type = "function", 
	description = " Class:Shader.SetGlobalTexGenMode Static:True Public:True",
	args =  "( System.String propertyName, TexGenMode mode )", 
	returns = "System.Void",
 },
SetGlobalTextureMatrixName = {
	type = "function", 
	description = " Class:Shader.SetGlobalTextureMatrixName Static:True Public:True",
	args =  "( System.String propertyName, System.String matrixName )", 
	returns = "System.Void",
 },
get_globalShaderHardwareTier = {
	type = "function", 
	description = " Class:Shader.get_globalShaderHardwareTier Static:True Public:True",
	args =  "()", 
	returns = "UnityEngine.Rendering.ShaderHardwareTier",
 },
set_globalShaderHardwareTier = {
	type = "function", 
	description = " Class:Shader.set_globalShaderHardwareTier Static:True Public:True",
	args =  "( UnityEngine.Rendering.ShaderHardwareTier value )", 
	returns = "System.Void",
 },
Renderer = { 
	type = "class",
	description = "UnityEngine",
},
get_isPartOfStaticBatch = {
	type = "function", 
	description = " Class:Renderer.get_isPartOfStaticBatch Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
Physics = { 
	type = "class",
	description = "UnityEngine",
},
AudioClip = { 
	type = "class",
	description = "UnityEngine",
},
get_length = {
	type = "function", 
	description = " Class:AudioClip.get_length Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_samples = {
	type = "function", 
	description = " Class:AudioClip.get_samples Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_channels = {
	type = "function", 
	description = " Class:AudioClip.get_channels Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_frequency = {
	type = "function", 
	description = " Class:AudioClip.get_frequency Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
get_isReadyToPlay = {
	type = "function", 
	description = " Class:AudioClip.get_isReadyToPlay Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_loadType = {
	type = "function", 
	description = " Class:AudioClip.get_loadType Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.AudioClipLoadType",
 },
LoadAudioData = {
	type = "function", 
	description = " Class:AudioClip.LoadAudioData Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
UnloadAudioData = {
	type = "function", 
	description = " Class:AudioClip.UnloadAudioData Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_preloadAudioData = {
	type = "function", 
	description = " Class:AudioClip.get_preloadAudioData Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_loadState = {
	type = "function", 
	description = " Class:AudioClip.get_loadState Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.AudioDataLoadState",
 },
get_loadInBackground = {
	type = "function", 
	description = " Class:AudioClip.get_loadInBackground Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
GetData = {
	type = "function", 
	description = " Class:AudioClip.GetData Static:False Public:True",
	args =  "( Single[] data, Int32 offsetSamples )", 
	returns = "System.Boolean",
 },
SetData = {
	type = "function", 
	description = " Class:AudioClip.SetData Static:False Public:True",
	args =  "( Single[] data, Int32 offsetSamples )", 
	returns = "System.Boolean",
 },
Create = {
	type = "function", 
	description = " Class:AudioClip.Create Static:True Public:True",
	args =  "( System.String name, Int32 lengthSamples, Int32 channels, Int32 frequency, Boolean _3D, Boolean stream )", 
	returns = "UnityEngine.AudioClip",
 },
Create = {
	type = "function", 
	description = " Class:AudioClip.Create Static:True Public:True",
	args =  "( System.String name, Int32 lengthSamples, Int32 channels, Int32 frequency, Boolean _3D, Boolean stream, PCMReaderCallback pcmreadercallback )", 
	returns = "UnityEngine.AudioClip",
 },
Create = {
	type = "function", 
	description = " Class:AudioClip.Create Static:True Public:True",
	args =  "( System.String name, Int32 lengthSamples, Int32 channels, Int32 frequency, Boolean _3D, Boolean stream, PCMReaderCallback pcmreadercallback, PCMSetPositionCallback pcmsetpositioncallback )", 
	returns = "UnityEngine.AudioClip",
 },
Create = {
	type = "function", 
	description = " Class:AudioClip.Create Static:True Public:True",
	args =  "( System.String name, Int32 lengthSamples, Int32 channels, Int32 frequency, Boolean stream )", 
	returns = "UnityEngine.AudioClip",
 },
Create = {
	type = "function", 
	description = " Class:AudioClip.Create Static:True Public:True",
	args =  "( System.String name, Int32 lengthSamples, Int32 channels, Int32 frequency, Boolean stream, PCMReaderCallback pcmreadercallback )", 
	returns = "UnityEngine.AudioClip",
 },
Create = {
	type = "function", 
	description = " Class:AudioClip.Create Static:True Public:True",
	args =  "( System.String name, Int32 lengthSamples, Int32 channels, Int32 frequency, Boolean stream, PCMReaderCallback pcmreadercallback, PCMSetPositionCallback pcmsetpositioncallback )", 
	returns = "UnityEngine.AudioClip",
 },
ParticleSystem = { 
	type = "class",
	description = "UnityEngine",
},
get_startDelay = {
	type = "function", 
	description = " Class:ParticleSystem.get_startDelay Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_startDelay = {
	type = "function", 
	description = " Class:ParticleSystem.set_startDelay Static:False Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
LightType = { 
	type = "class",
	description = "UnityEngine",
},
GetTypeCode = {
	type = "function", 
	description = " Class:LightType.GetTypeCode Static:False Public:True",
	args =  "()", 
	returns = "System.TypeCode",
 },
CompareTo = {
	type = "function", 
	description = " Class:LightType.CompareTo Static:False Public:True",
	args =  "( Object target )", 
	returns = "System.Int32",
 },
Animator = { 
	type = "class",
	description = "UnityEngine",
},
get_isOptimizable = {
	type = "function", 
	description = " Class:Animator.get_isOptimizable Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_isHuman = {
	type = "function", 
	description = " Class:Animator.get_isHuman Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_hasRootMotion = {
	type = "function", 
	description = " Class:Animator.get_hasRootMotion Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_humanScale = {
	type = "function", 
	description = " Class:Animator.get_humanScale Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_isInitialized = {
	type = "function", 
	description = " Class:Animator.get_isInitialized Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
GetFloat = {
	type = "function", 
	description = " Class:Animator.GetFloat Static:False Public:True",
	args =  "( System.String name )", 
	returns = "System.Single",
 },
GetFloat = {
	type = "function", 
	description = " Class:Animator.GetFloat Static:False Public:True",
	args =  "( Int32 id )", 
	returns = "System.Single",
 },
SetFloat = {
	type = "function", 
	description = " Class:Animator.SetFloat Static:False Public:True",
	args =  "( System.String name, Single value )", 
	returns = "System.Void",
 },
SetFloat = {
	type = "function", 
	description = " Class:Animator.SetFloat Static:False Public:True",
	args =  "( System.String name, Single value, Single dampTime, Single deltaTime )", 
	returns = "System.Void",
 },
SetFloat = {
	type = "function", 
	description = " Class:Animator.SetFloat Static:False Public:True",
	args =  "( Int32 id, Single value )", 
	returns = "System.Void",
 },
SetFloat = {
	type = "function", 
	description = " Class:Animator.SetFloat Static:False Public:True",
	args =  "( Int32 id, Single value, Single dampTime, Single deltaTime )", 
	returns = "System.Void",
 },
GetBool = {
	type = "function", 
	description = " Class:Animator.GetBool Static:False Public:True",
	args =  "( System.String name )", 
	returns = "System.Boolean",
 },
GetBool = {
	type = "function", 
	description = " Class:Animator.GetBool Static:False Public:True",
	args =  "( Int32 id )", 
	returns = "System.Boolean",
 },
SetBool = {
	type = "function", 
	description = " Class:Animator.SetBool Static:False Public:True",
	args =  "( System.String name, Boolean value )", 
	returns = "System.Void",
 },
SetBool = {
	type = "function", 
	description = " Class:Animator.SetBool Static:False Public:True",
	args =  "( Int32 id, Boolean value )", 
	returns = "System.Void",
 },
GetInteger = {
	type = "function", 
	description = " Class:Animator.GetInteger Static:False Public:True",
	args =  "( System.String name )", 
	returns = "System.Int32",
 },
GetInteger = {
	type = "function", 
	description = " Class:Animator.GetInteger Static:False Public:True",
	args =  "( Int32 id )", 
	returns = "System.Int32",
 },
SetInteger = {
	type = "function", 
	description = " Class:Animator.SetInteger Static:False Public:True",
	args =  "( System.String name, Int32 value )", 
	returns = "System.Void",
 },
SetInteger = {
	type = "function", 
	description = " Class:Animator.SetInteger Static:False Public:True",
	args =  "( Int32 id, Int32 value )", 
	returns = "System.Void",
 },
SetTrigger = {
	type = "function", 
	description = " Class:Animator.SetTrigger Static:False Public:True",
	args =  "( System.String name )", 
	returns = "System.Void",
 },
SetTrigger = {
	type = "function", 
	description = " Class:Animator.SetTrigger Static:False Public:True",
	args =  "( Int32 id )", 
	returns = "System.Void",
 },
ResetTrigger = {
	type = "function", 
	description = " Class:Animator.ResetTrigger Static:False Public:True",
	args =  "( System.String name )", 
	returns = "System.Void",
 },
ResetTrigger = {
	type = "function", 
	description = " Class:Animator.ResetTrigger Static:False Public:True",
	args =  "( Int32 id )", 
	returns = "System.Void",
 },
IsParameterControlledByCurve = {
	type = "function", 
	description = " Class:Animator.IsParameterControlledByCurve Static:False Public:True",
	args =  "( System.String name )", 
	returns = "System.Boolean",
 },
IsParameterControlledByCurve = {
	type = "function", 
	description = " Class:Animator.IsParameterControlledByCurve Static:False Public:True",
	args =  "( Int32 id )", 
	returns = "System.Boolean",
 },
get_deltaPosition = {
	type = "function", 
	description = " Class:Animator.get_deltaPosition Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
get_deltaRotation = {
	type = "function", 
	description = " Class:Animator.get_deltaRotation Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Quaternion",
 },
get_velocity = {
	type = "function", 
	description = " Class:Animator.get_velocity Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
get_angularVelocity = {
	type = "function", 
	description = " Class:Animator.get_angularVelocity Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
get_rootPosition = {
	type = "function", 
	description = " Class:Animator.get_rootPosition Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_rootPosition = {
	type = "function", 
	description = " Class:Animator.set_rootPosition Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_rootRotation = {
	type = "function", 
	description = " Class:Animator.get_rootRotation Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Quaternion",
 },
set_rootRotation = {
	type = "function", 
	description = " Class:Animator.set_rootRotation Static:False Public:True",
	args =  "( Quaternion value )", 
	returns = "System.Void",
 },
get_applyRootMotion = {
	type = "function", 
	description = " Class:Animator.get_applyRootMotion Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_applyRootMotion = {
	type = "function", 
	description = " Class:Animator.set_applyRootMotion Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_linearVelocityBlending = {
	type = "function", 
	description = " Class:Animator.get_linearVelocityBlending Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_linearVelocityBlending = {
	type = "function", 
	description = " Class:Animator.set_linearVelocityBlending Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_animatePhysics = {
	type = "function", 
	description = " Class:Animator.get_animatePhysics Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_animatePhysics = {
	type = "function", 
	description = " Class:Animator.set_animatePhysics Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_updateMode = {
	type = "function", 
	description = " Class:Animator.get_updateMode Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.AnimatorUpdateMode",
 },
set_updateMode = {
	type = "function", 
	description = " Class:Animator.set_updateMode Static:False Public:True",
	args =  "( AnimatorUpdateMode value )", 
	returns = "System.Void",
 },
get_hasTransformHierarchy = {
	type = "function", 
	description = " Class:Animator.get_hasTransformHierarchy Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_gravityWeight = {
	type = "function", 
	description = " Class:Animator.get_gravityWeight Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_bodyPosition = {
	type = "function", 
	description = " Class:Animator.get_bodyPosition Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
set_bodyPosition = {
	type = "function", 
	description = " Class:Animator.set_bodyPosition Static:False Public:True",
	args =  "( Vector3 value )", 
	returns = "System.Void",
 },
get_bodyRotation = {
	type = "function", 
	description = " Class:Animator.get_bodyRotation Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Quaternion",
 },
set_bodyRotation = {
	type = "function", 
	description = " Class:Animator.set_bodyRotation Static:False Public:True",
	args =  "( Quaternion value )", 
	returns = "System.Void",
 },
GetIKPosition = {
	type = "function", 
	description = " Class:Animator.GetIKPosition Static:False Public:True",
	args =  "( AvatarIKGoal goal )", 
	returns = "UnityEngine.Vector3",
 },
SetIKPosition = {
	type = "function", 
	description = " Class:Animator.SetIKPosition Static:False Public:True",
	args =  "( AvatarIKGoal goal, Vector3 goalPosition )", 
	returns = "System.Void",
 },
GetIKRotation = {
	type = "function", 
	description = " Class:Animator.GetIKRotation Static:False Public:True",
	args =  "( AvatarIKGoal goal )", 
	returns = "UnityEngine.Quaternion",
 },
SetIKRotation = {
	type = "function", 
	description = " Class:Animator.SetIKRotation Static:False Public:True",
	args =  "( AvatarIKGoal goal, Quaternion goalRotation )", 
	returns = "System.Void",
 },
GetIKPositionWeight = {
	type = "function", 
	description = " Class:Animator.GetIKPositionWeight Static:False Public:True",
	args =  "( AvatarIKGoal goal )", 
	returns = "System.Single",
 },
SetIKPositionWeight = {
	type = "function", 
	description = " Class:Animator.SetIKPositionWeight Static:False Public:True",
	args =  "( AvatarIKGoal goal, Single value )", 
	returns = "System.Void",
 },
GetIKRotationWeight = {
	type = "function", 
	description = " Class:Animator.GetIKRotationWeight Static:False Public:True",
	args =  "( AvatarIKGoal goal )", 
	returns = "System.Single",
 },
SetIKRotationWeight = {
	type = "function", 
	description = " Class:Animator.SetIKRotationWeight Static:False Public:True",
	args =  "( AvatarIKGoal goal, Single value )", 
	returns = "System.Void",
 },
GetIKHintPosition = {
	type = "function", 
	description = " Class:Animator.GetIKHintPosition Static:False Public:True",
	args =  "( AvatarIKHint hint )", 
	returns = "UnityEngine.Vector3",
 },
SetIKHintPosition = {
	type = "function", 
	description = " Class:Animator.SetIKHintPosition Static:False Public:True",
	args =  "( AvatarIKHint hint, Vector3 hintPosition )", 
	returns = "System.Void",
 },
GetIKHintPositionWeight = {
	type = "function", 
	description = " Class:Animator.GetIKHintPositionWeight Static:False Public:True",
	args =  "( AvatarIKHint hint )", 
	returns = "System.Single",
 },
SetIKHintPositionWeight = {
	type = "function", 
	description = " Class:Animator.SetIKHintPositionWeight Static:False Public:True",
	args =  "( AvatarIKHint hint, Single value )", 
	returns = "System.Void",
 },
SetLookAtPosition = {
	type = "function", 
	description = " Class:Animator.SetLookAtPosition Static:False Public:True",
	args =  "( Vector3 lookAtPosition )", 
	returns = "System.Void",
 },
SetLookAtWeight = {
	type = "function", 
	description = " Class:Animator.SetLookAtWeight Static:False Public:True",
	args =  "( Single weight, Single bodyWeight, Single headWeight, Single eyesWeight )", 
	returns = "System.Void",
 },
SetLookAtWeight = {
	type = "function", 
	description = " Class:Animator.SetLookAtWeight Static:False Public:True",
	args =  "( Single weight, Single bodyWeight, Single headWeight )", 
	returns = "System.Void",
 },
SetLookAtWeight = {
	type = "function", 
	description = " Class:Animator.SetLookAtWeight Static:False Public:True",
	args =  "( Single weight, Single bodyWeight )", 
	returns = "System.Void",
 },
SetLookAtWeight = {
	type = "function", 
	description = " Class:Animator.SetLookAtWeight Static:False Public:True",
	args =  "( Single weight )", 
	returns = "System.Void",
 },
SetLookAtWeight = {
	type = "function", 
	description = " Class:Animator.SetLookAtWeight Static:False Public:True",
	args =  "( Single weight, Single bodyWeight, Single headWeight, Single eyesWeight, Single clampWeight )", 
	returns = "System.Void",
 },
SetBoneLocalRotation = {
	type = "function", 
	description = " Class:Animator.SetBoneLocalRotation Static:False Public:True",
	args =  "( HumanBodyBones humanBoneId, Quaternion rotation )", 
	returns = "System.Void",
 },
GetBehaviour = {
	type = "function", 
	description = " Class:Animator.GetBehaviour Static:False Public:True",
	args =  "()", 
	returns = "T",
 },
GetBehaviours = {
	type = "function", 
	description = " Class:Animator.GetBehaviours Static:False Public:True",
	args =  "()", 
	returns = "T[]",
 },
get_stabilizeFeet = {
	type = "function", 
	description = " Class:Animator.get_stabilizeFeet Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_stabilizeFeet = {
	type = "function", 
	description = " Class:Animator.set_stabilizeFeet Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_layerCount = {
	type = "function", 
	description = " Class:Animator.get_layerCount Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
GetLayerName = {
	type = "function", 
	description = " Class:Animator.GetLayerName Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "System.String",
 },
GetLayerIndex = {
	type = "function", 
	description = " Class:Animator.GetLayerIndex Static:False Public:True",
	args =  "( System.String layerName )", 
	returns = "System.Int32",
 },
GetLayerWeight = {
	type = "function", 
	description = " Class:Animator.GetLayerWeight Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "System.Single",
 },
SetLayerWeight = {
	type = "function", 
	description = " Class:Animator.SetLayerWeight Static:False Public:True",
	args =  "( Int32 layerIndex, Single weight )", 
	returns = "System.Void",
 },
GetCurrentAnimatorStateInfo = {
	type = "function", 
	description = " Class:Animator.GetCurrentAnimatorStateInfo Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "UnityEngine.AnimatorStateInfo",
 },
GetNextAnimatorStateInfo = {
	type = "function", 
	description = " Class:Animator.GetNextAnimatorStateInfo Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "UnityEngine.AnimatorStateInfo",
 },
GetAnimatorTransitionInfo = {
	type = "function", 
	description = " Class:Animator.GetAnimatorTransitionInfo Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "UnityEngine.AnimatorTransitionInfo",
 },
GetCurrentAnimatorClipInfoCount = {
	type = "function", 
	description = " Class:Animator.GetCurrentAnimatorClipInfoCount Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "System.Int32",
 },
GetCurrentAnimatorClipInfo = {
	type = "function", 
	description = " Class:Animator.GetCurrentAnimatorClipInfo Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "UnityEngine.AnimatorClipInfo[]",
 },
GetCurrentAnimatorClipInfo = {
	type = "function", 
	description = " Class:Animator.GetCurrentAnimatorClipInfo Static:False Public:True",
	args =  "( Int32 layerIndex, System.Collections.Generic.List`1[[UnityEngine.AnimatorClipInfo, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] clips )", 
	returns = "System.Void",
 },
GetNextAnimatorClipInfoCount = {
	type = "function", 
	description = " Class:Animator.GetNextAnimatorClipInfoCount Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "System.Int32",
 },
GetNextAnimatorClipInfo = {
	type = "function", 
	description = " Class:Animator.GetNextAnimatorClipInfo Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "UnityEngine.AnimatorClipInfo[]",
 },
GetNextAnimatorClipInfo = {
	type = "function", 
	description = " Class:Animator.GetNextAnimatorClipInfo Static:False Public:True",
	args =  "( Int32 layerIndex, System.Collections.Generic.List`1[[UnityEngine.AnimatorClipInfo, UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]] clips )", 
	returns = "System.Void",
 },
IsInTransition = {
	type = "function", 
	description = " Class:Animator.IsInTransition Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "System.Boolean",
 },
get_parameters = {
	type = "function", 
	description = " Class:Animator.get_parameters Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.AnimatorControllerParameter[]",
 },
get_parameterCount = {
	type = "function", 
	description = " Class:Animator.get_parameterCount Static:False Public:True",
	args =  "()", 
	returns = "System.Int32",
 },
GetParameter = {
	type = "function", 
	description = " Class:Animator.GetParameter Static:False Public:True",
	args =  "( Int32 index )", 
	returns = "UnityEngine.AnimatorControllerParameter",
 },
get_feetPivotActive = {
	type = "function", 
	description = " Class:Animator.get_feetPivotActive Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_feetPivotActive = {
	type = "function", 
	description = " Class:Animator.set_feetPivotActive Static:False Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_pivotWeight = {
	type = "function", 
	description = " Class:Animator.get_pivotWeight Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_pivotPosition = {
	type = "function", 
	description = " Class:Animator.get_pivotPosition Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
MatchTarget = {
	type = "function", 
	description = " Class:Animator.MatchTarget Static:False Public:True",
	args =  "( Vector3 matchPosition, Quaternion matchRotation, AvatarTarget targetBodyPart, MatchTargetWeightMask weightMask, Single startNormalizedTime, Single targetNormalizedTime )", 
	returns = "System.Void",
 },
MatchTarget = {
	type = "function", 
	description = " Class:Animator.MatchTarget Static:False Public:True",
	args =  "( Vector3 matchPosition, Quaternion matchRotation, AvatarTarget targetBodyPart, MatchTargetWeightMask weightMask, Single startNormalizedTime )", 
	returns = "System.Void",
 },
InterruptMatchTarget = {
	type = "function", 
	description = " Class:Animator.InterruptMatchTarget Static:False Public:True",
	args =  "( Boolean completeMatch )", 
	returns = "System.Void",
 },
InterruptMatchTarget = {
	type = "function", 
	description = " Class:Animator.InterruptMatchTarget Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
get_isMatchingTarget = {
	type = "function", 
	description = " Class:Animator.get_isMatchingTarget Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
get_speed = {
	type = "function", 
	description = " Class:Animator.get_speed Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_speed = {
	type = "function", 
	description = " Class:Animator.set_speed Static:False Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
ForceStateNormalizedTime = {
	type = "function", 
	description = " Class:Animator.ForceStateNormalizedTime Static:False Public:True",
	args =  "( Single normalizedTime )", 
	returns = "System.Void",
 },
CrossFadeInFixedTime = {
	type = "function", 
	description = " Class:Animator.CrossFadeInFixedTime Static:False Public:True",
	args =  "( System.String stateName, Single transitionDuration, Int32 layer )", 
	returns = "System.Void",
 },
CrossFadeInFixedTime = {
	type = "function", 
	description = " Class:Animator.CrossFadeInFixedTime Static:False Public:True",
	args =  "( System.String stateName, Single transitionDuration )", 
	returns = "System.Void",
 },
CrossFadeInFixedTime = {
	type = "function", 
	description = " Class:Animator.CrossFadeInFixedTime Static:False Public:True",
	args =  "( System.String stateName, Single transitionDuration, Int32 layer, Single fixedTime )", 
	returns = "System.Void",
 },
CrossFadeInFixedTime = {
	type = "function", 
	description = " Class:Animator.CrossFadeInFixedTime Static:False Public:True",
	args =  "( Int32 stateNameHash, Single transitionDuration, Int32 layer, Single fixedTime )", 
	returns = "System.Void",
 },
CrossFadeInFixedTime = {
	type = "function", 
	description = " Class:Animator.CrossFadeInFixedTime Static:False Public:True",
	args =  "( Int32 stateNameHash, Single transitionDuration, Int32 layer )", 
	returns = "System.Void",
 },
CrossFadeInFixedTime = {
	type = "function", 
	description = " Class:Animator.CrossFadeInFixedTime Static:False Public:True",
	args =  "( Int32 stateNameHash, Single transitionDuration )", 
	returns = "System.Void",
 },
CrossFade = {
	type = "function", 
	description = " Class:Animator.CrossFade Static:False Public:True",
	args =  "( System.String stateName, Single transitionDuration, Int32 layer )", 
	returns = "System.Void",
 },
CrossFade = {
	type = "function", 
	description = " Class:Animator.CrossFade Static:False Public:True",
	args =  "( System.String stateName, Single transitionDuration )", 
	returns = "System.Void",
 },
CrossFade = {
	type = "function", 
	description = " Class:Animator.CrossFade Static:False Public:True",
	args =  "( System.String stateName, Single transitionDuration, Int32 layer, Single normalizedTime )", 
	returns = "System.Void",
 },
CrossFade = {
	type = "function", 
	description = " Class:Animator.CrossFade Static:False Public:True",
	args =  "( Int32 stateNameHash, Single transitionDuration, Int32 layer, Single normalizedTime )", 
	returns = "System.Void",
 },
CrossFade = {
	type = "function", 
	description = " Class:Animator.CrossFade Static:False Public:True",
	args =  "( Int32 stateNameHash, Single transitionDuration, Int32 layer )", 
	returns = "System.Void",
 },
CrossFade = {
	type = "function", 
	description = " Class:Animator.CrossFade Static:False Public:True",
	args =  "( Int32 stateNameHash, Single transitionDuration )", 
	returns = "System.Void",
 },
PlayInFixedTime = {
	type = "function", 
	description = " Class:Animator.PlayInFixedTime Static:False Public:True",
	args =  "( System.String stateName, Int32 layer )", 
	returns = "System.Void",
 },
PlayInFixedTime = {
	type = "function", 
	description = " Class:Animator.PlayInFixedTime Static:False Public:True",
	args =  "( System.String stateName )", 
	returns = "System.Void",
 },
PlayInFixedTime = {
	type = "function", 
	description = " Class:Animator.PlayInFixedTime Static:False Public:True",
	args =  "( System.String stateName, Int32 layer, Single fixedTime )", 
	returns = "System.Void",
 },
PlayInFixedTime = {
	type = "function", 
	description = " Class:Animator.PlayInFixedTime Static:False Public:True",
	args =  "( Int32 stateNameHash, Int32 layer, Single fixedTime )", 
	returns = "System.Void",
 },
PlayInFixedTime = {
	type = "function", 
	description = " Class:Animator.PlayInFixedTime Static:False Public:True",
	args =  "( Int32 stateNameHash, Int32 layer )", 
	returns = "System.Void",
 },
PlayInFixedTime = {
	type = "function", 
	description = " Class:Animator.PlayInFixedTime Static:False Public:True",
	args =  "( Int32 stateNameHash )", 
	returns = "System.Void",
 },
Play = {
	type = "function", 
	description = " Class:Animator.Play Static:False Public:True",
	args =  "( System.String stateName, Int32 layer )", 
	returns = "System.Void",
 },
Play = {
	type = "function", 
	description = " Class:Animator.Play Static:False Public:True",
	args =  "( System.String stateName )", 
	returns = "System.Void",
 },
Play = {
	type = "function", 
	description = " Class:Animator.Play Static:False Public:True",
	args =  "( System.String stateName, Int32 layer, Single normalizedTime )", 
	returns = "System.Void",
 },
Play = {
	type = "function", 
	description = " Class:Animator.Play Static:False Public:True",
	args =  "( Int32 stateNameHash, Int32 layer, Single normalizedTime )", 
	returns = "System.Void",
 },
Play = {
	type = "function", 
	description = " Class:Animator.Play Static:False Public:True",
	args =  "( Int32 stateNameHash, Int32 layer )", 
	returns = "System.Void",
 },
Play = {
	type = "function", 
	description = " Class:Animator.Play Static:False Public:True",
	args =  "( Int32 stateNameHash )", 
	returns = "System.Void",
 },
SetTarget = {
	type = "function", 
	description = " Class:Animator.SetTarget Static:False Public:True",
	args =  "( AvatarTarget targetIndex, Single targetNormalizedTime )", 
	returns = "System.Void",
 },
get_targetPosition = {
	type = "function", 
	description = " Class:Animator.get_targetPosition Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector3",
 },
get_targetRotation = {
	type = "function", 
	description = " Class:Animator.get_targetRotation Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Quaternion",
 },
IsControlled = {
	type = "function", 
	description = " Class:Animator.IsControlled Static:False Public:True",
	args =  "( Transform transform )", 
	returns = "System.Boolean",
 },
GetBoneTransform = {
	type = "function", 
	description = " Class:Animator.GetBoneTransform Static:False Public:True",
	args =  "( HumanBodyBones humanBoneId )", 
	returns = "UnityEngine.Transform",
 },
get_cullingMode = {
	type = "function", 
	description = " Class:Animator.get_cullingMode Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.AnimatorCullingMode",
 },
set_cullingMode = {
	type = "function", 
	description = " Class:Animator.set_cullingMode Static:False Public:True",
	args =  "( AnimatorCullingMode value )", 
	returns = "System.Void",
 },
StartPlayback = {
	type = "function", 
	description = " Class:Animator.StartPlayback Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
StopPlayback = {
	type = "function", 
	description = " Class:Animator.StopPlayback Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
get_playbackTime = {
	type = "function", 
	description = " Class:Animator.get_playbackTime Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_playbackTime = {
	type = "function", 
	description = " Class:Animator.set_playbackTime Static:False Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
StartRecording = {
	type = "function", 
	description = " Class:Animator.StartRecording Static:False Public:True",
	args =  "( Int32 frameCount )", 
	returns = "System.Void",
 },
StopRecording = {
	type = "function", 
	description = " Class:Animator.StopRecording Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
get_recorderStartTime = {
	type = "function", 
	description = " Class:Animator.get_recorderStartTime Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_recorderStartTime = {
	type = "function", 
	description = " Class:Animator.set_recorderStartTime Static:False Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_recorderStopTime = {
	type = "function", 
	description = " Class:Animator.get_recorderStopTime Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
set_recorderStopTime = {
	type = "function", 
	description = " Class:Animator.set_recorderStopTime Static:False Public:True",
	args =  "( Single value )", 
	returns = "System.Void",
 },
get_recorderMode = {
	type = "function", 
	description = " Class:Animator.get_recorderMode Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.AnimatorRecorderMode",
 },
get_runtimeAnimatorController = {
	type = "function", 
	description = " Class:Animator.get_runtimeAnimatorController Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.RuntimeAnimatorController",
 },
set_runtimeAnimatorController = {
	type = "function", 
	description = " Class:Animator.set_runtimeAnimatorController Static:False Public:True",
	args =  "( RuntimeAnimatorController value )", 
	returns = "System.Void",
 },
HasState = {
	type = "function", 
	description = " Class:Animator.HasState Static:False Public:True",
	args =  "( Int32 layerIndex, Int32 stateID )", 
	returns = "System.Boolean",
 },
StringToHash = {
	type = "function", 
	description = " Class:Animator.StringToHash Static:True Public:True",
	args =  "( System.String name )", 
	returns = "System.Int32",
 },
get_avatar = {
	type = "function", 
	description = " Class:Animator.get_avatar Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Avatar",
 },
set_avatar = {
	type = "function", 
	description = " Class:Animator.set_avatar Static:False Public:True",
	args =  "( Avatar value )", 
	returns = "System.Void",
 },
get_layersAffectMassCenter = {
	type = "function", 
	description = " Class:Animator.get_layersAffectMassCenter Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_layersAffectMassCenter = {
	type = "function", 
	description = " Class:Animator.set_layersAffectMassCenter Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_leftFeetBottomHeight = {
	type = "function", 
	description = " Class:Animator.get_leftFeetBottomHeight Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
get_rightFeetBottomHeight = {
	type = "function", 
	description = " Class:Animator.get_rightFeetBottomHeight Static:False Public:True",
	args =  "()", 
	returns = "System.Single",
 },
Update = {
	type = "function", 
	description = " Class:Animator.Update Static:False Public:True",
	args =  "( Single deltaTime )", 
	returns = "System.Void",
 },
Rebind = {
	type = "function", 
	description = " Class:Animator.Rebind Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
ApplyBuiltinRootMotion = {
	type = "function", 
	description = " Class:Animator.ApplyBuiltinRootMotion Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
get_logWarnings = {
	type = "function", 
	description = " Class:Animator.get_logWarnings Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_logWarnings = {
	type = "function", 
	description = " Class:Animator.set_logWarnings Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_fireEvents = {
	type = "function", 
	description = " Class:Animator.get_fireEvents Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_fireEvents = {
	type = "function", 
	description = " Class:Animator.set_fireEvents Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
GetVector = {
	type = "function", 
	description = " Class:Animator.GetVector Static:False Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Vector3",
 },
GetVector = {
	type = "function", 
	description = " Class:Animator.GetVector Static:False Public:True",
	args =  "( Int32 id )", 
	returns = "UnityEngine.Vector3",
 },
SetVector = {
	type = "function", 
	description = " Class:Animator.SetVector Static:False Public:True",
	args =  "( System.String name, Vector3 value )", 
	returns = "System.Void",
 },
SetVector = {
	type = "function", 
	description = " Class:Animator.SetVector Static:False Public:True",
	args =  "( Int32 id, Vector3 value )", 
	returns = "System.Void",
 },
GetQuaternion = {
	type = "function", 
	description = " Class:Animator.GetQuaternion Static:False Public:True",
	args =  "( System.String name )", 
	returns = "UnityEngine.Quaternion",
 },
GetQuaternion = {
	type = "function", 
	description = " Class:Animator.GetQuaternion Static:False Public:True",
	args =  "( Int32 id )", 
	returns = "UnityEngine.Quaternion",
 },
SetQuaternion = {
	type = "function", 
	description = " Class:Animator.SetQuaternion Static:False Public:True",
	args =  "( System.String name, Quaternion value )", 
	returns = "System.Void",
 },
SetQuaternion = {
	type = "function", 
	description = " Class:Animator.SetQuaternion Static:False Public:True",
	args =  "( Int32 id, Quaternion value )", 
	returns = "System.Void",
 },
GetCurrentAnimationClipState = {
	type = "function", 
	description = " Class:Animator.GetCurrentAnimationClipState Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "UnityEngine.AnimationInfo[]",
 },
GetNextAnimationClipState = {
	type = "function", 
	description = " Class:Animator.GetNextAnimationClipState Static:False Public:True",
	args =  "( Int32 layerIndex )", 
	returns = "UnityEngine.AnimationInfo[]",
 },
Play = {
	type = "function", 
	description = " Class:Animator.Play Static:False Public:True",
	args =  "( Playable pStruct )", 
	returns = "System.Void",
 },
Stop = {
	type = "function", 
	description = " Class:Animator.Stop Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
SetTime = {
	type = "function", 
	description = " Class:Animator.SetTime Static:False Public:True",
	args =  "( Double time )", 
	returns = "System.Void",
 },
GetTime = {
	type = "function", 
	description = " Class:Animator.GetTime Static:False Public:True",
	args =  "()", 
	returns = "System.Double",
 },
SetTimeUpdateMode = {
	type = "function", 
	description = " Class:Animator.SetTimeUpdateMode Static:False Public:True",
	args =  "( DirectorUpdateMode mode )", 
	returns = "System.Void",
 },
GetTimeUpdateMode = {
	type = "function", 
	description = " Class:Animator.GetTimeUpdateMode Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Experimental.Director.DirectorUpdateMode",
 },
SkinnedMeshRenderer = { 
	type = "class",
	description = "UnityEngine",
},
get_bones = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.get_bones Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Transform[]",
 },
set_bones = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.set_bones Static:False Public:True",
	args =  "( Transform[] value )", 
	returns = "System.Void",
 },
get_rootBone = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.get_rootBone Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Transform",
 },
set_rootBone = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.set_rootBone Static:False Public:True",
	args =  "( Transform value )", 
	returns = "System.Void",
 },
get_quality = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.get_quality Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.SkinQuality",
 },
set_quality = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.set_quality Static:False Public:True",
	args =  "( SkinQuality value )", 
	returns = "System.Void",
 },
get_sharedMesh = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.get_sharedMesh Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Mesh",
 },
set_sharedMesh = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.set_sharedMesh Static:False Public:True",
	args =  "( Mesh value )", 
	returns = "System.Void",
 },
get_updateWhenOffscreen = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.get_updateWhenOffscreen Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_updateWhenOffscreen = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.set_updateWhenOffscreen Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_skinnedMotionVectors = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.get_skinnedMotionVectors Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_skinnedMotionVectors = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.set_skinnedMotionVectors Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_localBounds = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.get_localBounds Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Bounds",
 },
set_localBounds = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.set_localBounds Static:False Public:True",
	args =  "( Bounds value )", 
	returns = "System.Void",
 },
BakeMesh = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.BakeMesh Static:False Public:True",
	args =  "( Mesh mesh )", 
	returns = "System.Void",
 },
GetBlendShapeWeight = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.GetBlendShapeWeight Static:False Public:True",
	args =  "( Int32 index )", 
	returns = "System.Single",
 },
SetBlendShapeWeight = {
	type = "function", 
	description = " Class:SkinnedMeshRenderer.SetBlendShapeWeight Static:False Public:True",
	args =  "( Int32 index, Single value )", 
	returns = "System.Void",
 },
MeshRenderer = { 
	type = "class",
	description = "UnityEngine",
},
get_additionalVertexStreams = {
	type = "function", 
	description = " Class:MeshRenderer.get_additionalVertexStreams Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Mesh",
 },
set_additionalVertexStreams = {
	type = "function", 
	description = " Class:MeshRenderer.set_additionalVertexStreams Static:False Public:True",
	args =  "( Mesh value )", 
	returns = "System.Void",
 },
Animation = { 
	type = "class",
	description = "UnityEngine",
},
get_clip = {
	type = "function", 
	description = " Class:Animation.get_clip Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.AnimationClip",
 },
set_clip = {
	type = "function", 
	description = " Class:Animation.set_clip Static:False Public:True",
	args =  "( AnimationClip value )", 
	returns = "System.Void",
 },
get_playAutomatically = {
	type = "function", 
	description = " Class:Animation.get_playAutomatically Static:False Public:True",
	args =  "()", 
	returns = "System.Boolean",
 },
set_playAutomatically = {
	type = "function", 
	description = " Class:Animation.set_playAutomatically Static:False Public:True",
	args =  "( Boolean value )", 
	returns = "System.Void",
 },
get_wrapMode = {
	type = "function", 
	description = " Class:Animation.get_wrapMode Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.WrapMode",
 },
set_wrapMode = {
	type = "function", 
	description = " Class:Animation.set_wrapMode Static:False Public:True",
	args =  "( WrapMode value )", 
	returns = "System.Void",
 },
AnimationClip = { 
	type = "class",
	description = "UnityEngine",
},
SampleAnimation = {
	type = "function", 
	description = " Class:AnimationClip.SampleAnimation Static:False Public:True",
	args =  "( GameObject go, Single time )", 
	returns = "System.Void",
 },
AnimationState = { 
	type = "class",
	description = "UnityEngine",
},
RenderTexture = { 
	type = "class",
	description = "UnityEngine",
},
GetTemporary = {
	type = "function", 
	description = " Class:RenderTexture.GetTemporary Static:True Public:True",
	args =  "( Int32 width, Int32 height, Int32 depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite, Int32 antiAliasing )", 
	returns = "UnityEngine.RenderTexture",
 },
GetTemporary = {
	type = "function", 
	description = " Class:RenderTexture.GetTemporary Static:True Public:True",
	args =  "( Int32 width, Int32 height, Int32 depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite )", 
	returns = "UnityEngine.RenderTexture",
 },
GetTemporary = {
	type = "function", 
	description = " Class:RenderTexture.GetTemporary Static:True Public:True",
	args =  "( Int32 width, Int32 height, Int32 depthBuffer, RenderTextureFormat format )", 
	returns = "UnityEngine.RenderTexture",
 },
GetTemporary = {
	type = "function", 
	description = " Class:RenderTexture.GetTemporary Static:True Public:True",
	args =  "( Int32 width, Int32 height, Int32 depthBuffer )", 
	returns = "UnityEngine.RenderTexture",
 },
GetTemporary = {
	type = "function", 
	description = " Class:RenderTexture.GetTemporary Static:True Public:True",
	args =  "( Int32 width, Int32 height )", 
	returns = "UnityEngine.RenderTexture",
 },
ReleaseTemporary = {
	type = "function", 
	description = " Class:RenderTexture.ReleaseTemporary Static:True Public:True",
	args =  "( RenderTexture temp )", 
	returns = "System.Void",
 },
Rigidbody = { 
	type = "class",
	description = "UnityEngine",
},
Vector2 = { 
	type = "class",
	description = "UnityEngine",
},
get_Item = {
	type = "function", 
	description = " Class:Vector2.get_Item Static:False Public:True",
	args =  "( Int32 index )", 
	returns = "System.Single",
 },
set_Item = {
	type = "function", 
	description = " Class:Vector2.set_Item Static:False Public:True",
	args =  "( Int32 index, Single value )", 
	returns = "System.Void",
 },
Set = {
	type = "function", 
	description = " Class:Vector2.Set Static:False Public:True",
	args =  "( Single newX, Single newY )", 
	returns = "System.Void",
 },
Lerp = {
	type = "function", 
	description = " Class:Vector2.Lerp Static:True Public:True",
	args =  "( Vector2 a, Vector2 b, Single t )", 
	returns = "UnityEngine.Vector2",
 },
LerpUnclamped = {
	type = "function", 
	description = " Class:Vector2.LerpUnclamped Static:True Public:True",
	args =  "( Vector2 a, Vector2 b, Single t )", 
	returns = "UnityEngine.Vector2",
 },
MoveTowards = {
	type = "function", 
	description = " Class:Vector2.MoveTowards Static:True Public:True",
	args =  "( Vector2 current, Vector2 target, Single maxDistanceDelta )", 
	returns = "UnityEngine.Vector2",
 },
Scale = {
	type = "function", 
	description = " Class:Vector2.Scale Static:True Public:True",
	args =  "( Vector2 a, Vector2 b )", 
	returns = "UnityEngine.Vector2",
 },
Scale = {
	type = "function", 
	description = " Class:Vector2.Scale Static:False Public:True",
	args =  "( Vector2 scale )", 
	returns = "System.Void",
 },
Normalize = {
	type = "function", 
	description = " Class:Vector2.Normalize Static:False Public:True",
	args =  "()", 
	returns = "System.Void",
 },
get_normalized = {
	type = "function", 
	description = " Class:Vector2.get_normalized Static:False Public:True",
	args =  "()", 
	returns = "UnityEngine.Vector2",
 },
Vector3 = { 
	type = "class",
	description = "UnityEngine",
},
Slerp = {
	type = "function", 
	description = " Class:Vector3.Slerp Static:True Public:True",
	args =  "( Vector3 a, Vector3 b, Single t )", 
	returns = "UnityEngine.Vector3",
 },
SlerpUnclamped = {
	type = "function", 
	description = " Class:Vector3.SlerpUnclamped Static:True Public:True",
	args =  "( Vector3 a, Vector3 b, Single t )", 
	returns = "UnityEngine.Vector3",
 },
OrthoNormalize = {
	type = "function", 
	description = " Class:Vector3.OrthoNormalize Static:True Public:True",
	args =  "( Vector3& normal, Vector3& tangent )", 
	returns = "System.Void",
 },
OrthoNormalize = {
	type = "function", 
	description = " Class:Vector3.OrthoNormalize Static:True Public:True",
	args =  "( Vector3& normal, Vector3& tangent, Vector3& binormal )", 
	returns = "System.Void",
 },
RotateTowards = {
	type = "function", 
	description = " Class:Vector3.RotateTowards Static:True Public:True",
	args =  "( Vector3 current, Vector3 target, Single maxRadiansDelta, Single maxMagnitudeDelta )", 
	returns = "UnityEngine.Vector3",
 },
Exclude = {
	type = "function", 
	description = " Class:Vector3.Exclude Static:True Public:True",
	args =  "( Vector3 excludeThis, Vector3 fromThat )", 
	returns = "UnityEngine.Vector3",
 },
Lerp = {
	type = "function", 
	description = " Class:Vector3.Lerp Static:True Public:True",
	args =  "( Vector3 a, Vector3 b, Single t )", 
	returns = "UnityEngine.Vector3",
 },
LerpUnclamped = {
	type = "function", 
	description = " Class:Vector3.LerpUnclamped Static:True Public:True",
	args =  "( Vector3 a, Vector3 b, Single t )", 
	returns = "UnityEngine.Vector3",
 },
MoveTowards = {
	type = "function", 
	description = " Class:Vector3.MoveTowards Static:True Public:True",
	args =  "( Vector3 current, Vector3 target, Single maxDistanceDelta )", 
	returns = "UnityEngine.Vector3",
 },
SmoothDamp = {
	type = "function", 
	description = " Class:Vector3.SmoothDamp Static:True Public:True",
	args =  "( Vector3 current, Vector3 target, Vector3& currentVelocity, Single smoothTime, Single maxSpeed )", 
	returns = "UnityEngine.Vector3",
 },
SmoothDamp = {
	type = "function", 
	description = " Class:Vector3.SmoothDamp Static:True Public:True",
	args =  "( Vector3 current, Vector3 target, Vector3& currentVelocity, Single smoothTime )", 
	returns = "UnityEngine.Vector3",
 },
SmoothDamp = {
	type = "function", 
	description = " Class:Vector3.SmoothDamp Static:True Public:True",
	args =  "( Vector3 current, Vector3 target, Vector3& currentVelocity, Single smoothTime, Single maxSpeed, Single deltaTime )", 
	returns = "UnityEngine.Vector3",
 },
Vector4 = { 
	type = "class",
	description = "UnityEngine",
},
}